{"ast":null,"code":"var _jsxFileName = \"/Users/ddm/expense-tracker/src/components/ExpenseChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction ExpenseChart({\n  expenses\n}) {\n  // Define colors for different categories\n  const categoryColors = {\n    food: 'rgba(255, 99, 132, 0.7)',\n    transportation: 'rgba(54, 162, 235, 0.7)',\n    entertainment: 'rgba(255, 206, 86, 0.7)',\n    utilities: 'rgba(75, 192, 192, 0.7)',\n    housing: 'rgba(153, 102, 255, 0.7)',\n    healthcare: 'rgba(255, 159, 64, 0.7)',\n    other: 'rgba(201, 203, 207, 0.7)'\n  };\n\n  // Helper function to capitalize category\n  const formatCategory = category => {\n    return category.charAt(0).toUpperCase() + category.slice(1);\n  };\n\n  // Group expenses by category\n  const expensesByCategory = expenses.reduce((acc, expense) => {\n    const {\n      category,\n      amount\n    } = expense;\n    acc[category] = (acc[category] || 0) + amount;\n    return acc;\n  }, {});\n\n  // Prepare data for chart\n  const chartData = {\n    labels: Object.keys(expensesByCategory).map(category => formatCategory(category)),\n    datasets: [{\n      data: Object.values(expensesByCategory),\n      backgroundColor: Object.keys(expensesByCategory).map(category => categoryColors[category]),\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#D1D5DB' // text-gray-300\n        }\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n  if (expenses.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-indigo-300\",\n      children: \"Expense Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","jsxDEV","_jsxDEV","register","ExpenseChart","expenses","categoryColors","food","transportation","entertainment","utilities","housing","healthcare","other","formatCategory","category","charAt","toUpperCase","slice","expensesByCategory","reduce","acc","expense","amount","chartData","labels","Object","keys","map","datasets","data","values","backgroundColor","borderWidth","options","responsive","plugins","legend","position","color","title","display","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ddm/expense-tracker/src/components/ExpenseChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction ExpenseChart({ expenses }) {\n  // Define colors for different categories\n  const categoryColors = {\n    food: 'rgba(255, 99, 132, 0.7)',\n    transportation: 'rgba(54, 162, 235, 0.7)',\n    entertainment: 'rgba(255, 206, 86, 0.7)',\n    utilities: 'rgba(75, 192, 192, 0.7)',\n    housing: 'rgba(153, 102, 255, 0.7)',\n    healthcare: 'rgba(255, 159, 64, 0.7)',\n    other: 'rgba(201, 203, 207, 0.7)'\n  };\n\n  // Helper function to capitalize category\n  const formatCategory = (category) => {\n    return category.charAt(0).toUpperCase() + category.slice(1);\n  };\n\n  // Group expenses by category\n  const expensesByCategory = expenses.reduce((acc, expense) => {\n    const { category, amount } = expense;\n    acc[category] = (acc[category] || 0) + amount;\n    return acc;\n  }, {});\n\n  // Prepare data for chart\n  const chartData = {\n    labels: Object.keys(expensesByCategory).map(category => formatCategory(category)),\n    datasets: [\n      {\n        data: Object.values(expensesByCategory),\n        backgroundColor: Object.keys(expensesByCategory).map(category => categoryColors[category]),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#D1D5DB' // text-gray-300\n        }\n      },\n      title: {\n        display: false,\n      },\n    },\n  };\n\n  if (expenses.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg mt-6\">\n      <h2 className=\"text-xl font-semibold mb-4 text-indigo-300\">Expense Breakdown</h2>\n      <Pie data={chartData} options={options} />\n    </div>\n  );\n}\n\nexport default ExpenseChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,SAASK,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAClC;EACA,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,yBAAyB;IAC/BC,cAAc,EAAE,yBAAyB;IACzCC,aAAa,EAAE,yBAAyB;IACxCC,SAAS,EAAE,yBAAyB;IACpCC,OAAO,EAAE,0BAA0B;IACnCC,UAAU,EAAE,yBAAyB;IACrCC,KAAK,EAAE;EACT,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnC,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGd,QAAQ,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IAC3D,MAAM;MAAEP,QAAQ;MAAEQ;IAAO,CAAC,GAAGD,OAAO;IACpCD,GAAG,CAACN,QAAQ,CAAC,GAAG,CAACM,GAAG,CAACN,QAAQ,CAAC,IAAI,CAAC,IAAIQ,MAAM;IAC7C,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,kBAAkB,CAAC,CAACS,GAAG,CAACb,QAAQ,IAAID,cAAc,CAACC,QAAQ,CAAC,CAAC;IACjFc,QAAQ,EAAE,CACR;MACEC,IAAI,EAAEJ,MAAM,CAACK,MAAM,CAACZ,kBAAkB,CAAC;MACvCa,eAAe,EAAEN,MAAM,CAACC,IAAI,CAACR,kBAAkB,CAAC,CAACS,GAAG,CAACb,QAAQ,IAAIT,cAAc,CAACS,QAAQ,CAAC,CAAC;MAC1FkB,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,QAAQ;QAClBb,MAAM,EAAE;UACNc,KAAK,EAAE,SAAS,CAAC;QACnB;MACF,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX;IACF;EACF,CAAC;EAED,IAAIpC,QAAQ,CAACqC,MAAM,KAAK,CAAC,EAAE;IACzB,OAAO,IAAI;EACb;EAEA,oBACExC,OAAA;IAAKyC,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBACxD1C,OAAA;MAAIyC,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjF9C,OAAA,CAACF,GAAG;MAAC8B,IAAI,EAAEN,SAAU;MAACU,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACC,EAAA,GA7DQ7C,YAAY;AA+DrB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}