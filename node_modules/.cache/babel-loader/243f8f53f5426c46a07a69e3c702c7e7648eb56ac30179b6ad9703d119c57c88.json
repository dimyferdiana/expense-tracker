{"ast":null,"code":"var _jsxFileName = \"/Users/ddm/expense-tracker/src/components/RecurringForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Combobox, ComboboxLabel, ComboboxOption } from './Combobox';\nimport TagSelector from './TagSelector';\nimport { categoryDB, tagDB, walletDB } from '../utils/db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecurringForm({\n  addRecurringTransaction,\n  dbInitialized = false\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    amount: '',\n    category: 'food',\n    tags: [],\n    walletId: 'cash',\n    isIncome: false,\n    notes: '',\n    frequency: 'monthly',\n    startDate: new Date().toISOString().slice(0, 10),\n    // YYYY-MM-DD format\n    endDate: '',\n    // Optional end date\n    nextDate: new Date().toISOString().slice(0, 10) // Initial next occurrence date\n  });\n  const [categories, setCategories] = useState([{\n    id: 'food',\n    name: 'Food'\n  }, {\n    id: 'transportation',\n    name: 'Transportation'\n  }, {\n    id: 'entertainment',\n    name: 'Entertainment'\n  }, {\n    id: 'utilities',\n    name: 'Utilities'\n  }, {\n    id: 'housing',\n    name: 'Housing'\n  }, {\n    id: 'healthcare',\n    name: 'Healthcare'\n  }, {\n    id: 'other',\n    name: 'Other'\n  }]);\n  const [tags, setTags] = useState([{\n    id: 'essential',\n    name: 'Essential'\n  }, {\n    id: 'recurring',\n    name: 'Recurring'\n  }, {\n    id: 'emergency',\n    name: 'Emergency'\n  }, {\n    id: 'personal',\n    name: 'Personal'\n  }, {\n    id: 'work',\n    name: 'Work'\n  }]);\n  const [wallets, setWallets] = useState([{\n    id: 'cash',\n    name: 'Cash',\n    type: 'cash',\n    balance: 0\n  }, {\n    id: 'bank',\n    name: 'Bank Account',\n    type: 'bank',\n    balance: 0\n  }, {\n    id: 'credit',\n    name: 'Credit Card',\n    type: 'credit_card',\n    balance: 0\n  }, {\n    id: 'ewallet',\n    name: 'E-Wallet',\n    type: 'e_wallet',\n    balance: 0\n  }]);\n  const frequencies = [{\n    id: 'daily',\n    name: 'Daily'\n  }, {\n    id: 'weekly',\n    name: 'Weekly'\n  }, {\n    id: 'biweekly',\n    name: 'Bi-weekly'\n  }, {\n    id: 'monthly',\n    name: 'Monthly'\n  }, {\n    id: 'quarterly',\n    name: 'Quarterly'\n  }, {\n    id: 'annually',\n    name: 'Annually'\n  }];\n\n  // Load categories and tags\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        if (dbInitialized) {\n          // Load categories from IndexedDB\n          const categoryData = await categoryDB.getAll();\n          if (categoryData.length > 0) {\n            setCategories(categoryData);\n\n            // Set default category if it exists in the loaded categories\n            const defaultCategory = categoryData.find(cat => cat.id === 'food') || categoryData[0];\n            if (defaultCategory) {\n              setFormData(prev => ({\n                ...prev,\n                category: defaultCategory.id\n              }));\n            }\n          }\n\n          // Load tags from IndexedDB\n          const tagData = await tagDB.getAll();\n          if (tagData.length > 0) {\n            setTags(tagData);\n          }\n\n          // Load wallets from IndexedDB\n          const walletData = await walletDB.getAll();\n          if (walletData.length > 0) {\n            setWallets(walletData);\n            // Set default wallet if not set\n            setFormData(prev => ({\n              ...prev,\n              walletId: prev.walletId || walletData[0].id\n            }));\n          }\n        } else {\n          // Fallback to localStorage\n          loadFromLocalStorage();\n        }\n      } catch (error) {\n        console.error('Error loading form data:', error);\n        loadFromLocalStorage();\n      }\n    };\n    loadData();\n  }, [dbInitialized]);\n\n  // Load categories from localStorage if needed\n  const loadFromLocalStorage = () => {\n    // Load categories\n    const savedCategories = localStorage.getItem('expense-categories');\n    if (savedCategories) {\n      const parsedCategories = JSON.parse(savedCategories);\n      setCategories(parsedCategories);\n\n      // Set default category if it exists in the loaded categories\n      const defaultCategory = parsedCategories.find(cat => cat.id === 'food') || parsedCategories[0];\n      if (defaultCategory) {\n        setFormData(prev => ({\n          ...prev,\n          category: defaultCategory.id\n        }));\n      }\n    }\n\n    // Load tags\n    const savedTags = localStorage.getItem('expense-tags');\n    if (savedTags) {\n      setTags(JSON.parse(savedTags));\n    }\n\n    // Load wallets\n    const savedWallets = localStorage.getItem('wallets');\n    if (savedWallets) {\n      const parsedWallets = JSON.parse(savedWallets);\n      setWallets(parsedWallets);\n      setFormData(prev => ({\n        ...prev,\n        walletId: prev.walletId || parsedWallets[0].id\n      }));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleToggleType = () => {\n    setFormData({\n      ...formData,\n      isIncome: !formData.isIncome\n    });\n  };\n  const handleCategoryChange = e => {\n    setFormData({\n      ...formData,\n      category: e.target.value.id\n    });\n  };\n  const handleTagsChange = selectedTags => {\n    setFormData({\n      ...formData,\n      tags: selectedTags\n    });\n  };\n  const handleWalletChange = e => {\n    setFormData({\n      ...formData,\n      walletId: e.target.value.id\n    });\n  };\n  const handleFrequencyChange = e => {\n    setFormData({\n      ...formData,\n      frequency: e.target.value.id\n    });\n  };\n  const calculateNextDate = (startDate, frequency) => {\n    const date = new Date(startDate);\n    const today = new Date();\n\n    // If start date is in the future, return it\n    if (date > today) {\n      return startDate;\n    }\n\n    // Otherwise, calculate the next occurrence based on frequency\n    switch (frequency) {\n      case 'daily':\n        date.setDate(today.getDate() + 1);\n        break;\n      case 'weekly':\n        date.setDate(today.getDate() + (7 - today.getDay() + date.getDay()) % 7);\n        if (date <= today) {\n          date.setDate(date.getDate() + 7);\n        }\n        break;\n      case 'biweekly':\n        date.setDate(today.getDate() + (7 - today.getDay() + date.getDay()) % 7);\n        if (date <= today) {\n          date.setDate(date.getDate() + 14);\n        }\n        break;\n      case 'monthly':\n        // Move to next month with the same day\n        date.setMonth(today.getMonth() + 1);\n        date.setDate(Math.min(date.getDate(), new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()));\n        break;\n      case 'quarterly':\n        // Move to 3 months later with the same day\n        date.setMonth(today.getMonth() + 3);\n        date.setDate(Math.min(date.getDate(), new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()));\n        break;\n      case 'annually':\n        // Move to next year with the same month and day\n        date.setFullYear(today.getFullYear() + 1);\n        break;\n      default:\n        date.setMonth(today.getMonth() + 1);\n    }\n    return date.toISOString().slice(0, 10);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Simple validation\n    if (!formData.name.trim() || !formData.amount || isNaN(formData.amount)) {\n      alert('Please enter valid details');\n      return;\n    }\n\n    // Calculate next occurrence date based on frequency\n    const nextDate = calculateNextDate(formData.startDate, formData.frequency);\n    addRecurringTransaction({\n      id: Date.now(),\n      // Simple unique ID\n      name: formData.name.trim(),\n      amount: parseFloat(formData.amount),\n      category: formData.category,\n      tags: formData.tags,\n      walletId: formData.walletId,\n      isIncome: formData.isIncome,\n      notes: formData.notes.trim(),\n      frequency: formData.frequency,\n      startDate: formData.startDate,\n      endDate: formData.endDate,\n      nextDate: nextDate\n    });\n\n    // Reset form\n    setFormData({\n      name: '',\n      amount: '',\n      category: 'food',\n      tags: [],\n      walletId: 'cash',\n      isIncome: false,\n      notes: '',\n      frequency: 'monthly',\n      startDate: new Date().toISOString().slice(0, 10),\n      endDate: '',\n      nextDate: new Date().toISOString().slice(0, 10)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-indigo-300\",\n      children: \"Create Recurring Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-700 rounded-md p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `flex-1 py-2 px-4 rounded ${!formData.isIncome ? 'bg-indigo-600 text-white' : 'text-gray-300'}`,\n          onClick: () => !formData.isIncome || handleToggleType(),\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `flex-1 py-2 px-4 rounded ${formData.isIncome ? 'bg-green-600 text-white' : 'text-gray-300'}`,\n          onClick: () => formData.isIncome || handleToggleType(),\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n        placeholder: \"What's this transaction for?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          name: \"amount\",\n          value: formData.amount,\n          onChange: handleChange,\n          required: true,\n          min: \"0.01\",\n          step: \"0.01\",\n          className: \"w-full pl-8 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          placeholder: \"0.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(ComboboxLabel, {\n        htmlFor: \"category\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n        id: \"category\",\n        value: categories.find(cat => cat.id === formData.category) || categories[0],\n        onChange: handleCategoryChange,\n        options: categories,\n        displayValue: option => option.name,\n        className: \"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(ComboboxOption, {\n          value: category,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-300 mb-1\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n        tags: tags,\n        selectedTags: formData.tags,\n        onChange: handleTagsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(ComboboxLabel, {\n        htmlFor: \"wallet\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n        id: \"wallet\",\n        value: wallets.find(w => w.id === formData.walletId) || wallets[0],\n        onChange: handleWalletChange,\n        options: wallets,\n        displayValue: option => option.name,\n        className: \"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\",\n        children: wallets.map(wallet => /*#__PURE__*/_jsxDEV(ComboboxOption, {\n          value: wallet,\n          children: [wallet.name, \" ($\", wallet.balance, \")\"]\n        }, wallet.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(ComboboxLabel, {\n        htmlFor: \"frequency\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Frequency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n        id: \"frequency\",\n        value: frequencies.find(f => f.id === formData.frequency) || frequencies[3] // Monthly default\n        ,\n        onChange: handleFrequencyChange,\n        options: frequencies,\n        displayValue: option => option.name,\n        className: \"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\",\n        children: frequencies.map(frequency => /*#__PURE__*/_jsxDEV(ComboboxOption, {\n          value: frequency,\n          children: frequency.name\n        }, frequency.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"startDate\",\n        name: \"startDate\",\n        value: formData.startDate,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endDate\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"End Date (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"endDate\",\n        name: \"endDate\",\n        value: formData.endDate,\n        onChange: handleChange,\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notes\",\n        className: \"block text-gray-300 mb-1\",\n        children: \"Notes (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"notes\",\n        name: \"notes\",\n        value: formData.notes,\n        onChange: handleChange,\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 h-20 resize-none\",\n        placeholder: \"Add any additional details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full py-2 bg-indigo-600 hover:bg-indigo-700 text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n        children: \"Create Recurring Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(RecurringForm, \"qn3yweeJUqYTqoMoC6VEh+NVNNQ=\");\n_c = RecurringForm;\nexport default RecurringForm;\nvar _c;\n$RefreshReg$(_c, \"RecurringForm\");","map":{"version":3,"names":["React","useState","useEffect","Combobox","ComboboxLabel","ComboboxOption","TagSelector","categoryDB","tagDB","walletDB","jsxDEV","_jsxDEV","RecurringForm","addRecurringTransaction","dbInitialized","_s","formData","setFormData","name","amount","category","tags","walletId","isIncome","notes","frequency","startDate","Date","toISOString","slice","endDate","nextDate","categories","setCategories","id","setTags","wallets","setWallets","type","balance","frequencies","loadData","categoryData","getAll","length","defaultCategory","find","cat","prev","tagData","walletData","loadFromLocalStorage","error","console","savedCategories","localStorage","getItem","parsedCategories","JSON","parse","savedTags","savedWallets","parsedWallets","handleChange","e","value","target","handleToggleType","handleCategoryChange","handleTagsChange","selectedTags","handleWalletChange","handleFrequencyChange","calculateNextDate","date","today","setDate","getDate","getDay","setMonth","getMonth","Math","min","getFullYear","setFullYear","handleSubmit","preventDefault","trim","isNaN","alert","now","parseFloat","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","onChange","required","placeholder","step","options","displayValue","option","map","w","wallet","f","_c","$RefreshReg$"],"sources":["/Users/ddm/expense-tracker/src/components/RecurringForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Combobox, ComboboxLabel, ComboboxOption } from './Combobox';\nimport TagSelector from './TagSelector';\nimport { categoryDB, tagDB, walletDB } from '../utils/db';\n\nfunction RecurringForm({ addRecurringTransaction, dbInitialized = false }) {\n  const [formData, setFormData] = useState({\n    name: '',\n    amount: '',\n    category: 'food',\n    tags: [],\n    walletId: 'cash',\n    isIncome: false,\n    notes: '',\n    frequency: 'monthly',\n    startDate: new Date().toISOString().slice(0, 10), // YYYY-MM-DD format\n    endDate: '', // Optional end date\n    nextDate: new Date().toISOString().slice(0, 10), // Initial next occurrence date\n  });\n  \n  const [categories, setCategories] = useState([\n    { id: 'food', name: 'Food' },\n    { id: 'transportation', name: 'Transportation' },\n    { id: 'entertainment', name: 'Entertainment' },\n    { id: 'utilities', name: 'Utilities' },\n    { id: 'housing', name: 'Housing' },\n    { id: 'healthcare', name: 'Healthcare' },\n    { id: 'other', name: 'Other' }\n  ]);\n\n  const [tags, setTags] = useState([\n    { id: 'essential', name: 'Essential' },\n    { id: 'recurring', name: 'Recurring' },\n    { id: 'emergency', name: 'Emergency' },\n    { id: 'personal', name: 'Personal' },\n    { id: 'work', name: 'Work' }\n  ]);\n\n  const [wallets, setWallets] = useState([\n    { id: 'cash', name: 'Cash', type: 'cash', balance: 0 },\n    { id: 'bank', name: 'Bank Account', type: 'bank', balance: 0 },\n    { id: 'credit', name: 'Credit Card', type: 'credit_card', balance: 0 },\n    { id: 'ewallet', name: 'E-Wallet', type: 'e_wallet', balance: 0 },\n  ]);\n\n  const frequencies = [\n    { id: 'daily', name: 'Daily' },\n    { id: 'weekly', name: 'Weekly' },\n    { id: 'biweekly', name: 'Bi-weekly' },\n    { id: 'monthly', name: 'Monthly' },\n    { id: 'quarterly', name: 'Quarterly' },\n    { id: 'annually', name: 'Annually' }\n  ];\n\n  // Load categories and tags\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        if (dbInitialized) {\n          // Load categories from IndexedDB\n          const categoryData = await categoryDB.getAll();\n          if (categoryData.length > 0) {\n            setCategories(categoryData);\n            \n            // Set default category if it exists in the loaded categories\n            const defaultCategory = categoryData.find(cat => cat.id === 'food') || categoryData[0];\n            if (defaultCategory) {\n              setFormData(prev => ({ ...prev, category: defaultCategory.id }));\n            }\n          }\n\n          // Load tags from IndexedDB\n          const tagData = await tagDB.getAll();\n          if (tagData.length > 0) {\n            setTags(tagData);\n          }\n\n          // Load wallets from IndexedDB\n          const walletData = await walletDB.getAll();\n          if (walletData.length > 0) {\n            setWallets(walletData);\n            // Set default wallet if not set\n            setFormData(prev => ({ ...prev, walletId: prev.walletId || walletData[0].id }));\n          }\n        } else {\n          // Fallback to localStorage\n          loadFromLocalStorage();\n        }\n      } catch (error) {\n        console.error('Error loading form data:', error);\n        loadFromLocalStorage();\n      }\n    };\n\n    loadData();\n  }, [dbInitialized]);\n\n  // Load categories from localStorage if needed\n  const loadFromLocalStorage = () => {\n    // Load categories\n    const savedCategories = localStorage.getItem('expense-categories');\n    if (savedCategories) {\n      const parsedCategories = JSON.parse(savedCategories);\n      setCategories(parsedCategories);\n      \n      // Set default category if it exists in the loaded categories\n      const defaultCategory = parsedCategories.find(cat => cat.id === 'food') || parsedCategories[0];\n      if (defaultCategory) {\n        setFormData(prev => ({ ...prev, category: defaultCategory.id }));\n      }\n    }\n\n    // Load tags\n    const savedTags = localStorage.getItem('expense-tags');\n    if (savedTags) {\n      setTags(JSON.parse(savedTags));\n    }\n\n    // Load wallets\n    const savedWallets = localStorage.getItem('wallets');\n    if (savedWallets) {\n      const parsedWallets = JSON.parse(savedWallets);\n      setWallets(parsedWallets);\n      setFormData(prev => ({ ...prev, walletId: prev.walletId || parsedWallets[0].id }));\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleToggleType = () => {\n    setFormData({ ...formData, isIncome: !formData.isIncome });\n  };\n\n  const handleCategoryChange = (e) => {\n    setFormData({ ...formData, category: e.target.value.id });\n  };\n\n  const handleTagsChange = (selectedTags) => {\n    setFormData({ ...formData, tags: selectedTags });\n  };\n\n  const handleWalletChange = (e) => {\n    setFormData({ ...formData, walletId: e.target.value.id });\n  };\n\n  const handleFrequencyChange = (e) => {\n    setFormData({ ...formData, frequency: e.target.value.id });\n  };\n\n  const calculateNextDate = (startDate, frequency) => {\n    const date = new Date(startDate);\n    const today = new Date();\n    \n    // If start date is in the future, return it\n    if (date > today) {\n      return startDate;\n    }\n    \n    // Otherwise, calculate the next occurrence based on frequency\n    switch (frequency) {\n      case 'daily':\n        date.setDate(today.getDate() + 1);\n        break;\n      case 'weekly':\n        date.setDate(today.getDate() + (7 - today.getDay() + date.getDay()) % 7);\n        if (date <= today) {\n          date.setDate(date.getDate() + 7);\n        }\n        break;\n      case 'biweekly':\n        date.setDate(today.getDate() + (7 - today.getDay() + date.getDay()) % 7);\n        if (date <= today) {\n          date.setDate(date.getDate() + 14);\n        }\n        break;\n      case 'monthly':\n        // Move to next month with the same day\n        date.setMonth(today.getMonth() + 1);\n        date.setDate(Math.min(date.getDate(), new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()));\n        break;\n      case 'quarterly':\n        // Move to 3 months later with the same day\n        date.setMonth(today.getMonth() + 3);\n        date.setDate(Math.min(date.getDate(), new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()));\n        break;\n      case 'annually':\n        // Move to next year with the same month and day\n        date.setFullYear(today.getFullYear() + 1);\n        break;\n      default:\n        date.setMonth(today.getMonth() + 1);\n    }\n    \n    return date.toISOString().slice(0, 10);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Simple validation\n    if (!formData.name.trim() || !formData.amount || isNaN(formData.amount)) {\n      alert('Please enter valid details');\n      return;\n    }\n    \n    // Calculate next occurrence date based on frequency\n    const nextDate = calculateNextDate(formData.startDate, formData.frequency);\n\n    addRecurringTransaction({\n      id: Date.now(), // Simple unique ID\n      name: formData.name.trim(),\n      amount: parseFloat(formData.amount),\n      category: formData.category,\n      tags: formData.tags,\n      walletId: formData.walletId,\n      isIncome: formData.isIncome,\n      notes: formData.notes.trim(),\n      frequency: formData.frequency,\n      startDate: formData.startDate,\n      endDate: formData.endDate,\n      nextDate: nextDate\n    });\n\n    // Reset form\n    setFormData({\n      name: '',\n      amount: '',\n      category: 'food',\n      tags: [],\n      walletId: 'cash',\n      isIncome: false,\n      notes: '',\n      frequency: 'monthly',\n      startDate: new Date().toISOString().slice(0, 10),\n      endDate: '',\n      nextDate: new Date().toISOString().slice(0, 10)\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\n      <h2 className=\"text-xl font-semibold mb-4 text-indigo-300\">Create Recurring Transaction</h2>\n      \n      {/* Transaction Type Toggle */}\n      <div className=\"mb-4\">\n        <div className=\"flex bg-gray-700 rounded-md p-1\">\n          <button\n            type=\"button\"\n            className={`flex-1 py-2 px-4 rounded ${!formData.isIncome ? 'bg-indigo-600 text-white' : 'text-gray-300'}`}\n            onClick={() => !formData.isIncome || handleToggleType()}\n          >\n            Expense\n          </button>\n          <button\n            type=\"button\"\n            className={`flex-1 py-2 px-4 rounded ${formData.isIncome ? 'bg-green-600 text-white' : 'text-gray-300'}`}\n            onClick={() => formData.isIncome || handleToggleType()}\n          >\n            Income\n          </button>\n        </div>\n      </div>\n      \n      {/* Transaction Name */}\n      <div className=\"mb-4\">\n        <label htmlFor=\"name\" className=\"block text-gray-300 mb-1\">Description</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"What's this transaction for?\"\n        />\n      </div>\n      \n      {/* Amount */}\n      <div className=\"mb-4\">\n        <label htmlFor=\"amount\" className=\"block text-gray-300 mb-1\">Amount</label>\n        <div className=\"relative\">\n          <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400\">$</span>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            value={formData.amount}\n            onChange={handleChange}\n            required\n            min=\"0.01\"\n            step=\"0.01\"\n            className=\"w-full pl-8 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n            placeholder=\"0.00\"\n          />\n        </div>\n      </div>\n      \n      {/* Category */}\n      <div className=\"mb-4\">\n        <ComboboxLabel htmlFor=\"category\" className=\"block text-gray-300 mb-1\">Category</ComboboxLabel>\n        <Combobox\n          id=\"category\"\n          value={categories.find(cat => cat.id === formData.category) || categories[0]}\n          onChange={handleCategoryChange}\n          options={categories}\n          displayValue={(option) => option.name}\n          className=\"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\"\n        >\n          {categories.map((category) => (\n            <ComboboxOption key={category.id} value={category}>\n              {category.name}\n            </ComboboxOption>\n          ))}\n        </Combobox>\n      </div>\n      \n      {/* Tags */}\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-300 mb-1\">Tags</label>\n        <TagSelector\n          tags={tags}\n          selectedTags={formData.tags}\n          onChange={handleTagsChange}\n        />\n      </div>\n      \n      {/* Wallet */}\n      <div className=\"mb-4\">\n        <ComboboxLabel htmlFor=\"wallet\" className=\"block text-gray-300 mb-1\">Wallet</ComboboxLabel>\n        <Combobox\n          id=\"wallet\"\n          value={wallets.find(w => w.id === formData.walletId) || wallets[0]}\n          onChange={handleWalletChange}\n          options={wallets}\n          displayValue={(option) => option.name}\n          className=\"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\"\n        >\n          {wallets.map((wallet) => (\n            <ComboboxOption key={wallet.id} value={wallet}>\n              {wallet.name} (${wallet.balance})\n            </ComboboxOption>\n          ))}\n        </Combobox>\n      </div>\n      \n      {/* Frequency */}\n      <div className=\"mb-4\">\n        <ComboboxLabel htmlFor=\"frequency\" className=\"block text-gray-300 mb-1\">Frequency</ComboboxLabel>\n        <Combobox\n          id=\"frequency\"\n          value={frequencies.find(f => f.id === formData.frequency) || frequencies[3]} // Monthly default\n          onChange={handleFrequencyChange}\n          options={frequencies}\n          displayValue={(option) => option.name}\n          className=\"w-full bg-gray-700 border border-gray-600 rounded-lg text-white\"\n        >\n          {frequencies.map((frequency) => (\n            <ComboboxOption key={frequency.id} value={frequency}>\n              {frequency.name}\n            </ComboboxOption>\n          ))}\n        </Combobox>\n      </div>\n      \n      {/* Start Date */}\n      <div className=\"mb-4\">\n        <label htmlFor=\"startDate\" className=\"block text-gray-300 mb-1\">Start Date</label>\n        <input\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          value={formData.startDate}\n          onChange={handleChange}\n          required\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        />\n      </div>\n      \n      {/* End Date (Optional) */}\n      <div className=\"mb-4\">\n        <label htmlFor=\"endDate\" className=\"block text-gray-300 mb-1\">End Date (Optional)</label>\n        <input\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          value={formData.endDate}\n          onChange={handleChange}\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        />\n      </div>\n      \n      {/* Notes */}\n      <div className=\"mb-4\">\n        <label htmlFor=\"notes\" className=\"block text-gray-300 mb-1\">Notes (Optional)</label>\n        <textarea\n          id=\"notes\"\n          name=\"notes\"\n          value={formData.notes}\n          onChange={handleChange}\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 h-20 resize-none\"\n          placeholder=\"Add any additional details...\"\n        ></textarea>\n      </div>\n      \n      {/* Submit Button */}\n      <div className=\"mt-6\">\n        <button\n          type=\"submit\"\n          className=\"w-full py-2 bg-indigo-600 hover:bg-indigo-700 text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        >\n          Create Recurring Transaction\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default RecurringForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}