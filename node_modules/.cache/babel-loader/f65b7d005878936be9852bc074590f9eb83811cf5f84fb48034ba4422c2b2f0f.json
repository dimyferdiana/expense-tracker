{"ast":null,"code":"var _jsxFileName = \"/Users/ddm/expense-tracker/src/components/TagSelector.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, forwardRef, useImperativeHandle, useEffect } from 'react';\nimport Badge from './Badge';\nimport { tagDB } from '../utils/db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagSelector = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  selectedTags = [],\n  availableTags = [],\n  onChange,\n  dbInitialized = false\n}, ref) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isAddTagModalOpen, setIsAddTagModalOpen] = useState(false);\n  const [newTagName, setNewTagName] = useState('');\n  const [temporaryTags, setTemporaryTags] = useState([]);\n\n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    openAddTagModal: () => setIsAddTagModalOpen(true),\n    getTemporaryTags: () => temporaryTags\n  }));\n\n  // Filter tags based on search term\n  const filteredTags = [...availableTags, ...temporaryTags].filter(tag => tag.name.toLowerCase().includes(searchTerm.toLowerCase())).filter(tag => !selectedTags.some(tagId => typeof tagId === 'object' ? tagId.id === tag.id : tagId === tag.id));\n\n  // Handle tag selection\n  const handleTagSelect = tagId => {\n    const newSelectedTags = [...selectedTags, tagId];\n    onChange(newSelectedTags);\n    setSearchTerm('');\n  };\n\n  // Handle tag removal\n  const handleTagRemove = tagId => {\n    const newSelectedTags = selectedTags.filter(id => {\n      if (typeof id === 'object') {\n        return id.id !== tagId;\n      }\n      return id !== tagId;\n    });\n    onChange(newSelectedTags);\n  };\n\n  // Get tag object by id\n  const getTagById = tagIdOrObject => {\n    // If it's already an object with name, return it\n    if (typeof tagIdOrObject === 'object' && tagIdOrObject !== null) {\n      return tagIdOrObject;\n    }\n\n    // Otherwise look up the tag\n    const tagId = tagIdOrObject;\n    const allTags = [...availableTags, ...temporaryTags];\n    return allTags.find(tag => tag.id === tagId);\n  };\n\n  // Color assignments for tags - distribute evenly across available colors\n  const tagColors = ['blue', 'green', 'yellow', 'indigo', 'purple', 'pink', 'lime', 'rose', 'teal', 'cyan', 'orange'];\n  const getTagColor = index => {\n    return tagColors[index % tagColors.length];\n  };\n\n  // Handle adding a new tag\n  const handleAddNewTag = async () => {\n    if (!newTagName.trim()) return;\n\n    // Generate a proper ID based on the tag name instead of a temporary ID\n    const tagId = newTagName.trim().toLowerCase().replace(/\\s+/g, '-');\n\n    // Create new tag object\n    const newTag = {\n      id: tagId,\n      name: newTagName.trim()\n    };\n\n    // Save tag to database if possible\n    if (dbInitialized) {\n      try {\n        // Check if tag already exists\n        const allTags = await tagDB.getAll();\n        const existingTag = allTags.find(t => t.id === tagId || t.name === newTagName.trim());\n        if (existingTag) {\n          // Use existing tag instead of creating duplicate\n          handleTagSelect(existingTag);\n        } else {\n          // Add new tag to database\n          await tagDB.add(newTag);\n\n          // Add to temporary tags list for local rendering\n          setTemporaryTags(prev => [...prev, newTag]);\n\n          // Add to selected tags\n          onChange([...selectedTags, newTag]);\n        }\n      } catch (error) {\n        console.error(\"Error saving tag to database:\", error);\n        // Fall back to temporary tags\n        setTemporaryTags(prev => [...prev, newTag]);\n        onChange([...selectedTags, newTag]);\n      }\n    } else {\n      // Add to temporary tags if not using database\n      setTemporaryTags(prev => [...prev, newTag]);\n\n      // Add to selected tags\n      onChange([...selectedTags, newTag]);\n\n      // Save to localStorage as fallback\n      try {\n        const savedTags = JSON.parse(localStorage.getItem('expense-tags') || '[]');\n        if (!savedTags.some(t => t.id === tagId || t.name === newTagName.trim())) {\n          savedTags.push(newTag);\n          localStorage.setItem('expense-tags', JSON.stringify(savedTags));\n        }\n      } catch (e) {\n        console.error(\"Error saving tag to localStorage:\", e);\n      }\n    }\n\n    // Reset form\n    setNewTagName('');\n    setIsAddTagModalOpen(false);\n  };\n\n  // Handle Enter key press in the new tag input\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddNewTag();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [selectedTags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex flex-wrap gap-2 mb-4 border-b border-gray-700\",\n      children: selectedTags.map((tagIdOrObject, index) => {\n        const tag = getTagById(tagIdOrObject);\n        return tag ? /*#__PURE__*/_jsxDEV(Badge, {\n          color: getTagColor(index),\n          removable: true,\n          onRemove: () => handleTagRemove(typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject),\n          children: tag.name\n        }, typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n        placeholder: \"Search tags...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2\",\n      children: filteredTags.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-sm\",\n        children: \"No matching tags found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : filteredTags.map((tag, index) => /*#__PURE__*/_jsxDEV(Badge, {\n        color: getTagColor(index),\n        className: \"cursor-pointer hover:opacity-80 transition-opacity\",\n        onClick: () => handleTagSelect(tag),\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), isAddTagModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 rounded-lg shadow-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-white mb-4\",\n          children: \"Add New Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            placeholder: \"Tag name\",\n            value: newTagName,\n            onChange: e => setNewTagName(e.target.value),\n            onKeyDown: handleKeyDown,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors duration-300\",\n            onClick: () => {\n              setNewTagName('');\n              setIsAddTagModalOpen(false);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors duration-300\",\n            onClick: handleAddNewTag,\n            disabled: !newTagName.trim(),\n            children: \"Add Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}, \"C1G7YWvbhb1+GawTehv5uLgS+Po=\")), \"C1G7YWvbhb1+GawTehv5uLgS+Po=\");\n_c2 = TagSelector;\nexport function TagSelectorWithLabel({\n  selectedTags,\n  availableTags,\n  onChange,\n  id = \"tags\",\n  dbInitialized = false\n}) {\n  _s2();\n  const tagSelectorRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: \"font-medium text-gray-300\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"text-xs px-2 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md transition-colors\",\n        onClick: () => {\n          var _tagSelectorRef$curre;\n          return (_tagSelectorRef$curre = tagSelectorRef.current) === null || _tagSelectorRef$curre === void 0 ? void 0 : _tagSelectorRef$curre.openAddTagModal();\n        },\n        children: \"+ Add New Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagSelector, {\n      ref: tagSelectorRef,\n      selectedTags: selectedTags,\n      availableTags: availableTags,\n      onChange: onChange,\n      dbInitialized: dbInitialized\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s2(TagSelectorWithLabel, \"eCX+F8mHtyVjp07SHcy3ViCaobs=\");\n_c3 = TagSelectorWithLabel;\nexport default TagSelector;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TagSelector$forwardRef\");\n$RefreshReg$(_c2, \"TagSelector\");\n$RefreshReg$(_c3, \"TagSelectorWithLabel\");","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","useEffect","Badge","tagDB","jsxDEV","_jsxDEV","TagSelector","_s","_c","selectedTags","availableTags","onChange","dbInitialized","ref","searchTerm","setSearchTerm","isAddTagModalOpen","setIsAddTagModalOpen","newTagName","setNewTagName","temporaryTags","setTemporaryTags","openAddTagModal","getTemporaryTags","filteredTags","filter","tag","name","toLowerCase","includes","some","tagId","id","handleTagSelect","newSelectedTags","handleTagRemove","getTagById","tagIdOrObject","allTags","find","tagColors","getTagColor","index","length","handleAddNewTag","trim","replace","newTag","getAll","existingTag","t","add","prev","error","console","savedTags","JSON","parse","localStorage","getItem","push","setItem","stringify","e","handleKeyDown","key","preventDefault","className","children","map","color","removable","onRemove","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","target","onClick","onKeyDown","autoFocus","disabled","_c2","TagSelectorWithLabel","_s2","tagSelectorRef","useRef","htmlFor","_tagSelectorRef$curre","current","_c3","$RefreshReg$"],"sources":["/Users/ddm/expense-tracker/src/components/TagSelector.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle, useEffect } from 'react';\nimport Badge from './Badge';\nimport { tagDB } from '../utils/db';\n\nconst TagSelector = forwardRef(({ selectedTags = [], availableTags = [], onChange, dbInitialized = false }, ref) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isAddTagModalOpen, setIsAddTagModalOpen] = useState(false);\n  const [newTagName, setNewTagName] = useState('');\n  const [temporaryTags, setTemporaryTags] = useState([]);\n  \n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    openAddTagModal: () => setIsAddTagModalOpen(true),\n    getTemporaryTags: () => temporaryTags\n  }));\n  \n  // Filter tags based on search term\n  const filteredTags = [...availableTags, ...temporaryTags]\n    .filter(tag => tag.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    .filter(tag => !selectedTags.some(tagId => \n      typeof tagId === 'object' ? tagId.id === tag.id : tagId === tag.id\n    ));\n\n  // Handle tag selection\n  const handleTagSelect = (tagId) => {\n    const newSelectedTags = [...selectedTags, tagId];\n    onChange(newSelectedTags);\n    setSearchTerm('');\n  };\n\n  // Handle tag removal\n  const handleTagRemove = (tagId) => {\n    const newSelectedTags = selectedTags.filter(id => {\n      if (typeof id === 'object') {\n        return id.id !== tagId;\n      }\n      return id !== tagId;\n    });\n    onChange(newSelectedTags);\n  };\n\n  // Get tag object by id\n  const getTagById = (tagIdOrObject) => {\n    // If it's already an object with name, return it\n    if (typeof tagIdOrObject === 'object' && tagIdOrObject !== null) {\n      return tagIdOrObject;\n    }\n    \n    // Otherwise look up the tag\n    const tagId = tagIdOrObject;\n    const allTags = [...availableTags, ...temporaryTags];\n    return allTags.find(tag => tag.id === tagId);\n  };\n\n  // Color assignments for tags - distribute evenly across available colors\n  const tagColors = [\n    'blue', 'green', 'yellow', 'indigo', 'purple', \n    'pink', 'lime', 'rose', 'teal', 'cyan', 'orange'\n  ];\n\n  const getTagColor = (index) => {\n    return tagColors[index % tagColors.length];\n  };\n\n  // Handle adding a new tag\n  const handleAddNewTag = async () => {\n    if (!newTagName.trim()) return;\n    \n    // Generate a proper ID based on the tag name instead of a temporary ID\n    const tagId = newTagName.trim().toLowerCase().replace(/\\s+/g, '-');\n    \n    // Create new tag object\n    const newTag = { id: tagId, name: newTagName.trim() };\n    \n    // Save tag to database if possible\n    if (dbInitialized) {\n      try {\n        // Check if tag already exists\n        const allTags = await tagDB.getAll();\n        const existingTag = allTags.find(t => t.id === tagId || t.name === newTagName.trim());\n        \n        if (existingTag) {\n          // Use existing tag instead of creating duplicate\n          handleTagSelect(existingTag);\n        } else {\n          // Add new tag to database\n          await tagDB.add(newTag);\n          \n          // Add to temporary tags list for local rendering\n          setTemporaryTags(prev => [...prev, newTag]);\n          \n          // Add to selected tags\n          onChange([...selectedTags, newTag]);\n        }\n      } catch (error) {\n        console.error(\"Error saving tag to database:\", error);\n        // Fall back to temporary tags\n        setTemporaryTags(prev => [...prev, newTag]);\n        onChange([...selectedTags, newTag]);\n      }\n    } else {\n      // Add to temporary tags if not using database\n      setTemporaryTags(prev => [...prev, newTag]);\n      \n      // Add to selected tags\n      onChange([...selectedTags, newTag]);\n      \n      // Save to localStorage as fallback\n      try {\n        const savedTags = JSON.parse(localStorage.getItem('expense-tags') || '[]');\n        if (!savedTags.some(t => t.id === tagId || t.name === newTagName.trim())) {\n          savedTags.push(newTag);\n          localStorage.setItem('expense-tags', JSON.stringify(savedTags));\n        }\n      } catch (e) {\n        console.error(\"Error saving tag to localStorage:\", e);\n      }\n    }\n    \n    // Reset form\n    setNewTagName('');\n    setIsAddTagModalOpen(false);\n  };\n\n  // Handle Enter key press in the new tag input\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddNewTag();\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Selected Tags Section */}\n      {selectedTags.length > 0 && (\n        <div className=\"p-4 flex flex-wrap gap-2 mb-4 border-b border-gray-700\">\n          {selectedTags.map((tagIdOrObject, index) => {\n            const tag = getTagById(tagIdOrObject);\n            return tag ? (\n              <Badge \n                key={typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject} \n                color={getTagColor(index)} \n                removable={true}\n                onRemove={() => handleTagRemove(typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject)}\n              >\n                {tag.name}\n              </Badge>\n            ) : null;\n          })}\n        </div>\n      )}\n\n      {/* Search Box */}\n      <div className=\"relative mb-4\">\n        <input\n          type=\"text\"\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"Search tags...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      \n      {/* Available Tags */}\n      <div className=\"flex flex-wrap gap-2\">\n        {filteredTags.length === 0 ? (\n          <p className=\"text-gray-400 text-sm\">No matching tags found</p>\n        ) : (\n          filteredTags.map((tag, index) => (\n            <Badge \n              key={tag.id}\n              color={getTagColor(index)}\n              className=\"cursor-pointer hover:opacity-80 transition-opacity\"\n              onClick={() => handleTagSelect(tag)}\n            >\n              {tag.name}\n            </Badge>\n          ))\n        )}\n      </div>\n\n      {/* Add New Tag Modal */}\n      {isAddTagModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n          <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-medium text-white mb-4\">Add New Tag</h3>\n            <div className=\"mb-4\">\n              <input\n                type=\"text\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                placeholder=\"Tag name\"\n                value={newTagName}\n                onChange={(e) => setNewTagName(e.target.value)}\n                onKeyDown={handleKeyDown}\n                autoFocus\n              />\n            </div>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                type=\"button\"\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors duration-300\"\n                onClick={() => {\n                  setNewTagName('');\n                  setIsAddTagModalOpen(false);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors duration-300\"\n                onClick={handleAddNewTag}\n                disabled={!newTagName.trim()}\n              >\n                Add Tag\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport function TagSelectorWithLabel({ selectedTags, availableTags, onChange, id = \"tags\", dbInitialized = false }) {\n  const tagSelectorRef = React.useRef();\n  \n  return (\n    <div className=\"mb-4\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <label htmlFor={id} className=\"font-medium text-gray-300\">Tags</label>\n        <button\n          type=\"button\"\n          className=\"text-xs px-2 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md transition-colors\"\n          onClick={() => tagSelectorRef.current?.openAddTagModal()}\n        >\n          + Add New Tag\n        </button>\n      </div>\n      <TagSelector \n        ref={tagSelectorRef}\n        selectedTags={selectedTags}\n        availableTags={availableTags}\n        onChange={onChange}\n        dbInitialized={dbInitialized}\n      />\n    </div>\n  );\n}\n\nexport default TagSelector; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,SAAS,QAAQ,OAAO;AACnF,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,KAAK,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAAC,EAAA,cAAGR,UAAU,CAAAS,EAAA,GAAAD,EAAA,CAAC,CAAC;EAAEE,YAAY,GAAG,EAAE;EAAEC,aAAa,GAAG,EAAE;EAAEC,QAAQ;EAAEC,aAAa,GAAG;AAAM,CAAC,EAAEC,GAAG,KAAK;EAAAN,EAAA;EAClH,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAE,mBAAmB,CAACa,GAAG,EAAE,OAAO;IAC9BS,eAAe,EAAEA,CAAA,KAAML,oBAAoB,CAAC,IAAI,CAAC;IACjDM,gBAAgB,EAAEA,CAAA,KAAMH;EAC1B,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMI,YAAY,GAAG,CAAC,GAAGd,aAAa,EAAE,GAAGU,aAAa,CAAC,CACtDK,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,UAAU,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CACxEH,MAAM,CAACC,GAAG,IAAI,CAACjB,YAAY,CAACqB,IAAI,CAACC,KAAK,IACrC,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,EAAE,KAAKN,GAAG,CAACM,EAAE,GAAGD,KAAK,KAAKL,GAAG,CAACM,EAClE,CAAC,CAAC;;EAEJ;EACA,MAAMC,eAAe,GAAIF,KAAK,IAAK;IACjC,MAAMG,eAAe,GAAG,CAAC,GAAGzB,YAAY,EAAEsB,KAAK,CAAC;IAChDpB,QAAQ,CAACuB,eAAe,CAAC;IACzBnB,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAMoB,eAAe,GAAIJ,KAAK,IAAK;IACjC,MAAMG,eAAe,GAAGzB,YAAY,CAACgB,MAAM,CAACO,EAAE,IAAI;MAChD,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;QAC1B,OAAOA,EAAE,CAACA,EAAE,KAAKD,KAAK;MACxB;MACA,OAAOC,EAAE,KAAKD,KAAK;IACrB,CAAC,CAAC;IACFpB,QAAQ,CAACuB,eAAe,CAAC;EAC3B,CAAC;;EAED;EACA,MAAME,UAAU,GAAIC,aAAa,IAAK;IACpC;IACA,IAAI,OAAOA,aAAa,KAAK,QAAQ,IAAIA,aAAa,KAAK,IAAI,EAAE;MAC/D,OAAOA,aAAa;IACtB;;IAEA;IACA,MAAMN,KAAK,GAAGM,aAAa;IAC3B,MAAMC,OAAO,GAAG,CAAC,GAAG5B,aAAa,EAAE,GAAGU,aAAa,CAAC;IACpD,OAAOkB,OAAO,CAACC,IAAI,CAACb,GAAG,IAAIA,GAAG,CAACM,EAAE,KAAKD,KAAK,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMS,SAAS,GAAG,CAChB,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAC7C,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CACjD;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,OAAOF,SAAS,CAACE,KAAK,GAAGF,SAAS,CAACG,MAAM,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC1B,UAAU,CAAC2B,IAAI,CAAC,CAAC,EAAE;;IAExB;IACA,MAAMd,KAAK,GAAGb,UAAU,CAAC2B,IAAI,CAAC,CAAC,CAACjB,WAAW,CAAC,CAAC,CAACkB,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;;IAElE;IACA,MAAMC,MAAM,GAAG;MAAEf,EAAE,EAAED,KAAK;MAAEJ,IAAI,EAAET,UAAU,CAAC2B,IAAI,CAAC;IAAE,CAAC;;IAErD;IACA,IAAIjC,aAAa,EAAE;MACjB,IAAI;QACF;QACA,MAAM0B,OAAO,GAAG,MAAMnC,KAAK,CAAC6C,MAAM,CAAC,CAAC;QACpC,MAAMC,WAAW,GAAGX,OAAO,CAACC,IAAI,CAACW,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKD,KAAK,IAAImB,CAAC,CAACvB,IAAI,KAAKT,UAAU,CAAC2B,IAAI,CAAC,CAAC,CAAC;QAErF,IAAII,WAAW,EAAE;UACf;UACAhB,eAAe,CAACgB,WAAW,CAAC;QAC9B,CAAC,MAAM;UACL;UACA,MAAM9C,KAAK,CAACgD,GAAG,CAACJ,MAAM,CAAC;;UAEvB;UACA1B,gBAAgB,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,MAAM,CAAC,CAAC;;UAE3C;UACApC,QAAQ,CAAC,CAAC,GAAGF,YAAY,EAAEsC,MAAM,CAAC,CAAC;QACrC;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD;QACAhC,gBAAgB,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,MAAM,CAAC,CAAC;QAC3CpC,QAAQ,CAAC,CAAC,GAAGF,YAAY,EAAEsC,MAAM,CAAC,CAAC;MACrC;IACF,CAAC,MAAM;MACL;MACA1B,gBAAgB,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,MAAM,CAAC,CAAC;;MAE3C;MACApC,QAAQ,CAAC,CAAC,GAAGF,YAAY,EAAEsC,MAAM,CAAC,CAAC;;MAEnC;MACA,IAAI;QACF,MAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;QAC1E,IAAI,CAACJ,SAAS,CAACzB,IAAI,CAACoB,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKD,KAAK,IAAImB,CAAC,CAACvB,IAAI,KAAKT,UAAU,CAAC2B,IAAI,CAAC,CAAC,CAAC,EAAE;UACxEU,SAAS,CAACK,IAAI,CAACb,MAAM,CAAC;UACtBW,YAAY,CAACG,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACM,SAAS,CAACP,SAAS,CAAC,CAAC;QACjE;MACF,CAAC,CAAC,OAAOQ,CAAC,EAAE;QACVT,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEU,CAAC,CAAC;MACvD;IACF;;IAEA;IACA5C,aAAa,CAAC,EAAE,CAAC;IACjBF,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM+C,aAAa,GAAID,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACE,GAAG,KAAK,OAAO,EAAE;MACrBF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBtB,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEvC,OAAA;IAAK8D,SAAS,EAAC,WAAW;IAAAC,QAAA,GAEvB3D,YAAY,CAACkC,MAAM,GAAG,CAAC,iBACtBtC,OAAA;MAAK8D,SAAS,EAAC,wDAAwD;MAAAC,QAAA,EACpE3D,YAAY,CAAC4D,GAAG,CAAC,CAAChC,aAAa,EAAEK,KAAK,KAAK;QAC1C,MAAMhB,GAAG,GAAGU,UAAU,CAACC,aAAa,CAAC;QACrC,OAAOX,GAAG,gBACRrB,OAAA,CAACH,KAAK;UAEJoE,KAAK,EAAE7B,WAAW,CAACC,KAAK,CAAE;UAC1B6B,SAAS,EAAE,IAAK;UAChBC,QAAQ,EAAEA,CAAA,KAAMrC,eAAe,CAAC,OAAOE,aAAa,KAAK,QAAQ,GAAGA,aAAa,CAACL,EAAE,GAAGK,aAAa,CAAE;UAAA+B,QAAA,EAErG1C,GAAG,CAACC;QAAI,GALJ,OAAOU,aAAa,KAAK,QAAQ,GAAGA,aAAa,CAACL,EAAE,GAAGK,aAAa;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMpE,CAAC,GACN,IAAI;MACV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDvE,OAAA;MAAK8D,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B/D,OAAA;QACEwE,IAAI,EAAC,MAAM;QACXV,SAAS,EAAC,iIAAiI;QAC3IW,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAEjE,UAAW;QAClBH,QAAQ,EAAGoD,CAAC,IAAKhD,aAAa,CAACgD,CAAC,CAACiB,MAAM,CAACD,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNvE,OAAA;MAAK8D,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAClC5C,YAAY,CAACmB,MAAM,KAAK,CAAC,gBACxBtC,OAAA;QAAG8D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE/DpD,YAAY,CAAC6C,GAAG,CAAC,CAAC3C,GAAG,EAAEgB,KAAK,kBAC1BrC,OAAA,CAACH,KAAK;QAEJoE,KAAK,EAAE7B,WAAW,CAACC,KAAK,CAAE;QAC1ByB,SAAS,EAAC,oDAAoD;QAC9Dc,OAAO,EAAEA,CAAA,KAAMhD,eAAe,CAACP,GAAG,CAAE;QAAA0C,QAAA,EAEnC1C,GAAG,CAACC;MAAI,GALJD,GAAG,CAACM,EAAE;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACR;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGL5D,iBAAiB,iBAChBX,OAAA;MAAK8D,SAAS,EAAC,4EAA4E;MAAAC,QAAA,eACzF/D,OAAA;QAAK8D,SAAS,EAAC,sDAAsD;QAAAC,QAAA,gBACnE/D,OAAA;UAAI8D,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpEvE,OAAA;UAAK8D,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnB/D,OAAA;YACEwE,IAAI,EAAC,MAAM;YACXV,SAAS,EAAC,iIAAiI;YAC3IW,WAAW,EAAC,UAAU;YACtBC,KAAK,EAAE7D,UAAW;YAClBP,QAAQ,EAAGoD,CAAC,IAAK5C,aAAa,CAAC4C,CAAC,CAACiB,MAAM,CAACD,KAAK,CAAE;YAC/CG,SAAS,EAAElB,aAAc;YACzBmB,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNvE,OAAA;UAAK8D,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC/D,OAAA;YACEwE,IAAI,EAAC,QAAQ;YACbV,SAAS,EAAC,8FAA8F;YACxGc,OAAO,EAAEA,CAAA,KAAM;cACb9D,aAAa,CAAC,EAAE,CAAC;cACjBF,oBAAoB,CAAC,KAAK,CAAC;YAC7B,CAAE;YAAAmD,QAAA,EACH;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvE,OAAA;YACEwE,IAAI,EAAC,QAAQ;YACbV,SAAS,EAAC,kGAAkG;YAC5Gc,OAAO,EAAErC,eAAgB;YACzBwC,QAAQ,EAAE,CAAClE,UAAU,CAAC2B,IAAI,CAAC,CAAE;YAAAuB,QAAA,EAC9B;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC,kCAAC;AAACS,GAAA,GA3NG/E,WAAW;AA6NjB,OAAO,SAASgF,oBAAoBA,CAAC;EAAE7E,YAAY;EAAEC,aAAa;EAAEC,QAAQ;EAAEqB,EAAE,GAAG,MAAM;EAAEpB,aAAa,GAAG;AAAM,CAAC,EAAE;EAAA2E,GAAA;EAClH,MAAMC,cAAc,GAAG3F,KAAK,CAAC4F,MAAM,CAAC,CAAC;EAErC,oBACEpF,OAAA;IAAK8D,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB/D,OAAA;MAAK8D,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrD/D,OAAA;QAAOqF,OAAO,EAAE1D,EAAG;QAACmC,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtEvE,OAAA;QACEwE,IAAI,EAAC,QAAQ;QACbV,SAAS,EAAC,6FAA6F;QACvGc,OAAO,EAAEA,CAAA;UAAA,IAAAU,qBAAA;UAAA,QAAAA,qBAAA,GAAMH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBrE,eAAe,CAAC,CAAC;QAAA,CAAC;QAAA8C,QAAA,EAC1D;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvE,OAAA,CAACC,WAAW;MACVO,GAAG,EAAE2E,cAAe;MACpB/E,YAAY,EAAEA,YAAa;MAC3BC,aAAa,EAAEA,aAAc;MAC7BC,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA;IAAc;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACW,GAAA,CAxBeD,oBAAoB;AAAAO,GAAA,GAApBP,oBAAoB;AA0BpC,eAAehF,WAAW;AAAC,IAAAE,EAAA,EAAA6E,GAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAtF,EAAA;AAAAsF,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}