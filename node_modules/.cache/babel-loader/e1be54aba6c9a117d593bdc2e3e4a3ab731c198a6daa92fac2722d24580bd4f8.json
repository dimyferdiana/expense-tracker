{"ast":null,"code":"import React,{useState,forwardRef,useImperativeHandle,useEffect}from'react';import Badge from'./Badge';import{tagDB}from'../utils/db';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TagSelector=/*#__PURE__*/forwardRef((_ref,ref)=>{let{selectedTags=[],availableTags=[],onChange,dbInitialized=false}=_ref;const[searchTerm,setSearchTerm]=useState('');const[isAddTagModalOpen,setIsAddTagModalOpen]=useState(false);const[newTagName,setNewTagName]=useState('');const[temporaryTags,setTemporaryTags]=useState([]);// Expose functions to parent component\nuseImperativeHandle(ref,()=>({openAddTagModal:()=>setIsAddTagModalOpen(true),getTemporaryTags:()=>temporaryTags}));// Filter tags based on search term\nconst filteredTags=[...availableTags,...temporaryTags].filter(tag=>tag.name.toLowerCase().includes(searchTerm.toLowerCase())).filter(tag=>!selectedTags.some(tagId=>typeof tagId==='object'?tagId.id===tag.id:tagId===tag.id));// Handle tag selection\nconst handleTagSelect=tagId=>{const newSelectedTags=[...selectedTags,tagId];onChange(newSelectedTags);setSearchTerm('');};// Handle tag removal\nconst handleTagRemove=tagId=>{const newSelectedTags=selectedTags.filter(id=>{if(typeof id==='object'){return id.id!==tagId;}return id!==tagId;});onChange(newSelectedTags);};// Get tag object by id\nconst getTagById=tagIdOrObject=>{// If it's already an object with name, return it\nif(typeof tagIdOrObject==='object'&&tagIdOrObject!==null&&tagIdOrObject.name){return tagIdOrObject;}// Otherwise look up the tag\nconst tagId=tagIdOrObject;const allTags=[...availableTags,...temporaryTags];const foundTag=allTags.find(tag=>tag.id===tagId);// If we can't find the tag, return a basic object to avoid null rendering issues\nreturn foundTag||{id:tagId,name:tagId};};// Color assignments for tags - distribute evenly across available colors\nconst tagColors=['blue','green','yellow','indigo','purple','pink','lime','rose','teal','cyan','orange'];const getTagColor=(tag,index)=>{return tag.color||tagColors[index%tagColors.length];};// Handle adding a new tag\nconst handleAddNewTag=async()=>{if(!newTagName.trim())return;// Generate a proper ID based on the tag name instead of a temporary ID\nconst tagId=newTagName.trim().toLowerCase().replace(/\\s+/g,'-');// Generate a random color\nconst colors=['blue','green','yellow','indigo','purple','pink','lime','rose','teal','cyan','orange'];const randomColor=colors[Math.floor(Math.random()*colors.length)];// Create new tag object\nconst newTag={id:tagId,name:newTagName.trim(),color:randomColor};// Save tag to database if possible\nif(dbInitialized){try{// Check if tag already exists\nconst allTags=await tagDB.getAll();const existingTag=allTags.find(t=>t.id===tagId||t.name.toLowerCase()===newTagName.trim().toLowerCase());if(existingTag){// Use existing tag instead of creating duplicate\nhandleTagSelect(existingTag);}else{// Add new tag to database\nawait tagDB.add(newTag);// Reload tags to make sure our tag was saved\nconst updatedTags=await tagDB.getAll();const savedTag=updatedTags.find(t=>t.id===tagId);if(savedTag){// Use the saved tag\nhandleTagSelect(savedTag);}else{// Fall back to the local tag\nsetTemporaryTags(prev=>[...prev,newTag]);handleTagSelect(newTag);}}}catch(error){console.error(\"Error saving tag to database:\",error);// Fall back to temporary tags\nsetTemporaryTags(prev=>[...prev,newTag]);handleTagSelect(newTag);}}else{// Add to temporary tags if not using database\nsetTemporaryTags(prev=>[...prev,newTag]);// Add to selected tags\nhandleTagSelect(newTag);// Save to localStorage as fallback\ntry{const savedTags=JSON.parse(localStorage.getItem('expense-tags')||'[]');if(!savedTags.some(t=>t.id===tagId||t.name.toLowerCase()===newTagName.trim().toLowerCase())){savedTags.push(newTag);localStorage.setItem('expense-tags',JSON.stringify(savedTags));}}catch(e){console.error(\"Error saving tag to localStorage:\",e);}}// Reset form\nsetNewTagName('');setIsAddTagModalOpen(false);};// Handle Enter key press in the new tag input\nconst handleKeyDown=e=>{if(e.key==='Enter'){e.preventDefault();handleAddNewTag();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[selectedTags.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"p-4 flex flex-wrap gap-2 mb-4 border-b border-gray-700\",children:selectedTags.map((tagIdOrObject,index)=>{const tag=getTagById(tagIdOrObject);return tag?/*#__PURE__*/_jsx(Badge,{color:getTagColor(tag,index),removable:true,onRemove:()=>handleTagRemove(typeof tagIdOrObject==='object'?tagIdOrObject.id:tagIdOrObject),children:tag.name},typeof tagIdOrObject==='object'?tagIdOrObject.id:tagIdOrObject):null;})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative mb-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",placeholder:\"Search tags...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:filteredTags.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm\",children:\"No matching tags found\"}):filteredTags.map((tag,index)=>/*#__PURE__*/_jsx(Badge,{color:getTagColor(tag,index),className:\"cursor-pointer hover:opacity-80 transition-opacity\",onClick:()=>handleTagSelect(tag),children:tag.name},tag.id))}),isAddTagModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-lg p-6 w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-white mb-4\",children:\"Add New Tag\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\",placeholder:\"Tag name\",value:newTagName,onChange:e=>setNewTagName(e.target.value),onKeyDown:handleKeyDown,autoFocus:true})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors duration-300\",onClick:()=>{setNewTagName('');setIsAddTagModalOpen(false);},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors duration-300\",onClick:handleAddNewTag,disabled:!newTagName.trim(),children:\"Add Tag\"})]})]})})]});});export function TagSelectorWithLabel(_ref2){let{selectedTags,availableTags,onChange,id=\"tags\",dbInitialized=false}=_ref2;const tagSelectorRef=React.useRef();return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"font-medium text-gray-300\",children:\"Tags\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"text-xs px-2 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md transition-colors\",onClick:()=>{var _tagSelectorRef$curre;return(_tagSelectorRef$curre=tagSelectorRef.current)===null||_tagSelectorRef$curre===void 0?void 0:_tagSelectorRef$curre.openAddTagModal();},children:\"+ Add New Tag\"})]}),/*#__PURE__*/_jsx(TagSelector,{ref:tagSelectorRef,selectedTags:selectedTags,availableTags:availableTags,onChange:onChange,dbInitialized:dbInitialized})]});}export default TagSelector;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","useEffect","Badge","tagDB","jsx","_jsx","jsxs","_jsxs","TagSelector","_ref","ref","selectedTags","availableTags","onChange","dbInitialized","searchTerm","setSearchTerm","isAddTagModalOpen","setIsAddTagModalOpen","newTagName","setNewTagName","temporaryTags","setTemporaryTags","openAddTagModal","getTemporaryTags","filteredTags","filter","tag","name","toLowerCase","includes","some","tagId","id","handleTagSelect","newSelectedTags","handleTagRemove","getTagById","tagIdOrObject","allTags","foundTag","find","tagColors","getTagColor","index","color","length","handleAddNewTag","trim","replace","colors","randomColor","Math","floor","random","newTag","getAll","existingTag","t","add","updatedTags","savedTag","prev","error","console","savedTags","JSON","parse","localStorage","getItem","push","setItem","stringify","e","handleKeyDown","key","preventDefault","className","children","map","removable","onRemove","type","placeholder","value","target","onClick","onKeyDown","autoFocus","disabled","TagSelectorWithLabel","_ref2","tagSelectorRef","useRef","htmlFor","_tagSelectorRef$curre","current"],"sources":["/Users/ddm/expense-tracker/src/components/TagSelector.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle, useEffect } from 'react';\nimport Badge from './Badge';\nimport { tagDB } from '../utils/db';\n\nconst TagSelector = forwardRef(({ selectedTags = [], availableTags = [], onChange, dbInitialized = false }, ref) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isAddTagModalOpen, setIsAddTagModalOpen] = useState(false);\n  const [newTagName, setNewTagName] = useState('');\n  const [temporaryTags, setTemporaryTags] = useState([]);\n  \n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    openAddTagModal: () => setIsAddTagModalOpen(true),\n    getTemporaryTags: () => temporaryTags\n  }));\n  \n  // Filter tags based on search term\n  const filteredTags = [...availableTags, ...temporaryTags]\n    .filter(tag => tag.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    .filter(tag => !selectedTags.some(tagId => \n      typeof tagId === 'object' ? tagId.id === tag.id : tagId === tag.id\n    ));\n\n  // Handle tag selection\n  const handleTagSelect = (tagId) => {\n    const newSelectedTags = [...selectedTags, tagId];\n    onChange(newSelectedTags);\n    setSearchTerm('');\n  };\n\n  // Handle tag removal\n  const handleTagRemove = (tagId) => {\n    const newSelectedTags = selectedTags.filter(id => {\n      if (typeof id === 'object') {\n        return id.id !== tagId;\n      }\n      return id !== tagId;\n    });\n    onChange(newSelectedTags);\n  };\n\n  // Get tag object by id\n  const getTagById = (tagIdOrObject) => {\n    // If it's already an object with name, return it\n    if (typeof tagIdOrObject === 'object' && tagIdOrObject !== null && tagIdOrObject.name) {\n      return tagIdOrObject;\n    }\n    \n    // Otherwise look up the tag\n    const tagId = tagIdOrObject;\n    const allTags = [...availableTags, ...temporaryTags];\n    const foundTag = allTags.find(tag => tag.id === tagId);\n    \n    // If we can't find the tag, return a basic object to avoid null rendering issues\n    return foundTag || { id: tagId, name: tagId };\n  };\n\n  // Color assignments for tags - distribute evenly across available colors\n  const tagColors = [\n    'blue', 'green', 'yellow', 'indigo', 'purple', \n    'pink', 'lime', 'rose', 'teal', 'cyan', 'orange'\n  ];\n\n  const getTagColor = (tag, index) => {\n    return tag.color || tagColors[index % tagColors.length];\n  };\n\n  // Handle adding a new tag\n  const handleAddNewTag = async () => {\n    if (!newTagName.trim()) return;\n    \n    // Generate a proper ID based on the tag name instead of a temporary ID\n    const tagId = newTagName.trim().toLowerCase().replace(/\\s+/g, '-');\n    \n    // Generate a random color\n    const colors = [\n      'blue', 'green', 'yellow', 'indigo', 'purple', \n      'pink', 'lime', 'rose', 'teal', 'cyan', 'orange'\n    ];\n    const randomColor = colors[Math.floor(Math.random() * colors.length)];\n    \n    // Create new tag object\n    const newTag = { \n      id: tagId, \n      name: newTagName.trim(),\n      color: randomColor\n    };\n    \n    // Save tag to database if possible\n    if (dbInitialized) {\n      try {\n        // Check if tag already exists\n        const allTags = await tagDB.getAll();\n        const existingTag = allTags.find(t => t.id === tagId || t.name.toLowerCase() === newTagName.trim().toLowerCase());\n        \n        if (existingTag) {\n          // Use existing tag instead of creating duplicate\n          handleTagSelect(existingTag);\n        } else {\n          // Add new tag to database\n          await tagDB.add(newTag);\n          \n          // Reload tags to make sure our tag was saved\n          const updatedTags = await tagDB.getAll();\n          const savedTag = updatedTags.find(t => t.id === tagId);\n          \n          if (savedTag) {\n            // Use the saved tag\n            handleTagSelect(savedTag);\n          } else {\n            // Fall back to the local tag\n            setTemporaryTags(prev => [...prev, newTag]);\n            handleTagSelect(newTag);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error saving tag to database:\", error);\n        // Fall back to temporary tags\n        setTemporaryTags(prev => [...prev, newTag]);\n        handleTagSelect(newTag);\n      }\n    } else {\n      // Add to temporary tags if not using database\n      setTemporaryTags(prev => [...prev, newTag]);\n      \n      // Add to selected tags\n      handleTagSelect(newTag);\n      \n      // Save to localStorage as fallback\n      try {\n        const savedTags = JSON.parse(localStorage.getItem('expense-tags') || '[]');\n        if (!savedTags.some(t => t.id === tagId || t.name.toLowerCase() === newTagName.trim().toLowerCase())) {\n          savedTags.push(newTag);\n          localStorage.setItem('expense-tags', JSON.stringify(savedTags));\n        }\n      } catch (e) {\n        console.error(\"Error saving tag to localStorage:\", e);\n      }\n    }\n    \n    // Reset form\n    setNewTagName('');\n    setIsAddTagModalOpen(false);\n  };\n\n  // Handle Enter key press in the new tag input\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddNewTag();\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Selected Tags Section */}\n      {selectedTags.length > 0 && (\n        <div className=\"p-4 flex flex-wrap gap-2 mb-4 border-b border-gray-700\">\n          {selectedTags.map((tagIdOrObject, index) => {\n            const tag = getTagById(tagIdOrObject);\n            return tag ? (\n              <Badge \n                key={typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject} \n                color={getTagColor(tag, index)} \n                removable={true}\n                onRemove={() => handleTagRemove(typeof tagIdOrObject === 'object' ? tagIdOrObject.id : tagIdOrObject)}\n              >\n                {tag.name}\n              </Badge>\n            ) : null;\n          })}\n        </div>\n      )}\n\n      {/* Search Box */}\n      <div className=\"relative mb-4\">\n        <input\n          type=\"text\"\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          placeholder=\"Search tags...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      \n      {/* Available Tags */}\n      <div className=\"flex flex-wrap gap-2\">\n        {filteredTags.length === 0 ? (\n          <p className=\"text-gray-400 text-sm\">No matching tags found</p>\n        ) : (\n          filteredTags.map((tag, index) => (\n            <Badge \n              key={tag.id}\n              color={getTagColor(tag, index)}\n              className=\"cursor-pointer hover:opacity-80 transition-opacity\"\n              onClick={() => handleTagSelect(tag)}\n            >\n              {tag.name}\n            </Badge>\n          ))\n        )}\n      </div>\n\n      {/* Add New Tag Modal */}\n      {isAddTagModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n          <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-medium text-white mb-4\">Add New Tag</h3>\n            <div className=\"mb-4\">\n              <input\n                type=\"text\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                placeholder=\"Tag name\"\n                value={newTagName}\n                onChange={(e) => setNewTagName(e.target.value)}\n                onKeyDown={handleKeyDown}\n                autoFocus\n              />\n            </div>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                type=\"button\"\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors duration-300\"\n                onClick={() => {\n                  setNewTagName('');\n                  setIsAddTagModalOpen(false);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors duration-300\"\n                onClick={handleAddNewTag}\n                disabled={!newTagName.trim()}\n              >\n                Add Tag\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport function TagSelectorWithLabel({ selectedTags, availableTags, onChange, id = \"tags\", dbInitialized = false }) {\n  const tagSelectorRef = React.useRef();\n  \n  return (\n    <div className=\"mb-4\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <label htmlFor={id} className=\"font-medium text-gray-300\">Tags</label>\n        <button\n          type=\"button\"\n          className=\"text-xs px-2 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md transition-colors\"\n          onClick={() => tagSelectorRef.current?.openAddTagModal()}\n        >\n          + Add New Tag\n        </button>\n      </div>\n      <TagSelector \n        ref={tagSelectorRef}\n        selectedTags={selectedTags}\n        availableTags={availableTags}\n        onChange={onChange}\n        dbInitialized={dbInitialized}\n      />\n    </div>\n  );\n}\n\nexport default TagSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}