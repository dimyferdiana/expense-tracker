{"ast":null,"code":"var _jsxFileName = \"/Users/ddm/expense-tracker/src/components/RecurringList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Badge from './Badge';\nimport { categoryDB, tagDB, recurringDB, expenseDB, walletDB } from '../utils/db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecurringList({\n  dbInitialized = false,\n  refreshData\n}) {\n  _s();\n  const [recurring, setRecurring] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load recurring transactions\n  useEffect(() => {\n    loadData();\n  }, [dbInitialized, refreshData]);\n  const loadData = async () => {\n    setIsLoading(true);\n    try {\n      if (dbInitialized) {\n        // Load from IndexedDB\n        const recurringData = await recurringDB.getAll();\n        setRecurring(recurringData);\n\n        // Load categories and tags for display\n        const categoryData = await categoryDB.getAll();\n        setCategories(categoryData);\n        const tagData = await tagDB.getAll();\n        setTags(tagData);\n      } else {\n        // Fallback to localStorage if needed\n        const savedRecurring = localStorage.getItem('recurring-transactions');\n        if (savedRecurring) {\n          setRecurring(JSON.parse(savedRecurring));\n        }\n\n        // Load categories\n        const savedCategories = localStorage.getItem('expense-categories');\n        if (savedCategories) {\n          setCategories(JSON.parse(savedCategories));\n        }\n\n        // Load tags\n        const savedTags = localStorage.getItem('expense-tags');\n        if (savedTags) {\n          setTags(JSON.parse(savedTags));\n        }\n      }\n    } catch (error) {\n      console.error('Error loading recurring transactions:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate a transaction from a recurring template\n  const generateTransaction = async recurringItem => {\n    try {\n      // Create transaction\n      const newTransaction = {\n        id: Date.now(),\n        name: recurringItem.name,\n        amount: recurringItem.amount,\n        category: recurringItem.category,\n        tags: [...recurringItem.tags, 'recurring'],\n        // Add recurring tag\n        walletId: recurringItem.walletId,\n        isIncome: recurringItem.isIncome,\n        notes: recurringItem.notes,\n        date: new Date().toISOString().slice(0, 10) // Today's date\n      };\n\n      // Save to database\n      if (dbInitialized) {\n        await expenseDB.add(newTransaction);\n\n        // Update wallet balance\n        try {\n          const wallets = await walletDB.getAll();\n          const wallet = wallets.find(w => w.id === newTransaction.walletId);\n          if (wallet) {\n            // For income add to balance, for expense subtract\n            const adjustment = newTransaction.isIncome ? parseFloat(newTransaction.amount) : -parseFloat(newTransaction.amount);\n            wallet.balance = parseFloat(wallet.balance) + adjustment;\n            await walletDB.update(wallet);\n          }\n        } catch (walletError) {\n          console.error('Error updating wallet balance:', walletError);\n        }\n\n        // Calculate next occurrence date\n        const nextDate = calculateNextDate(recurringItem.frequency, new Date().toISOString().slice(0, 10));\n\n        // Update recurring item's next date\n        await recurringDB.update({\n          ...recurringItem,\n          nextDate\n        });\n\n        // Refresh data\n        loadData();\n      }\n    } catch (error) {\n      console.error('Error generating transaction:', error);\n    }\n  };\n\n  // Delete a recurring transaction\n  const deleteRecurring = async id => {\n    try {\n      if (dbInitialized) {\n        await recurringDB.delete(id);\n      } else {\n        // Fallback to localStorage\n        const savedRecurring = JSON.parse(localStorage.getItem('recurring-transactions') || '[]');\n        const updatedRecurring = savedRecurring.filter(item => item.id !== id);\n        localStorage.setItem('recurring-transactions', JSON.stringify(updatedRecurring));\n      }\n      // Refresh the list\n      loadData();\n    } catch (error) {\n      console.error('Error deleting recurring transaction:', error);\n    }\n  };\n\n  // Process pending recurring transactions\n  const processAllDue = async () => {\n    if (!dbInitialized) return;\n    try {\n      // Get all due transactions\n      const dueTransactions = await recurringDB.getDueTransactions();\n\n      // Process each one\n      for (const transaction of dueTransactions) {\n        await generateTransaction(transaction);\n      }\n\n      // Refresh the list\n      loadData();\n    } catch (error) {\n      console.error('Error processing due transactions:', error);\n    }\n  };\n\n  // Calculate next date based on frequency\n  const calculateNextDate = (frequency, currentDate) => {\n    const date = new Date(currentDate);\n    switch (frequency) {\n      case 'daily':\n        date.setDate(date.getDate() + 1);\n        break;\n      case 'weekly':\n        date.setDate(date.getDate() + 7);\n        break;\n      case 'biweekly':\n        date.setDate(date.getDate() + 14);\n        break;\n      case 'monthly':\n        date.setMonth(date.getMonth() + 1);\n        break;\n      case 'quarterly':\n        date.setMonth(date.getMonth() + 3);\n        break;\n      case 'annually':\n        date.setFullYear(date.getFullYear() + 1);\n        break;\n      default:\n        date.setMonth(date.getMonth() + 1);\n      // Default to monthly\n    }\n    return date.toISOString().slice(0, 10);\n  };\n\n  // Format human-readable frequency\n  const formatFrequency = frequency => {\n    const frequencies = {\n      daily: 'Daily',\n      weekly: 'Weekly',\n      biweekly: 'Bi-weekly',\n      monthly: 'Monthly',\n      quarterly: 'Quarterly',\n      annually: 'Annually'\n    };\n    return frequencies[frequency] || frequency;\n  };\n\n  // Format category name\n  const formatCategory = categoryId => {\n    const category = categories.find(cat => cat.id === categoryId);\n    return category ? category.name : categoryId;\n  };\n\n  // Format rupiah\n  const formatRupiah = number => {\n    return new Intl.NumberFormat('id-ID').format(number);\n  };\n\n  // Get color for tag badge\n  const getTagColor = index => {\n    const colors = ['bg-blue-600', 'bg-purple-600', 'bg-green-600', 'bg-yellow-600', 'bg-pink-600'];\n    return colors[index % colors.length];\n  };\n\n  // Format tag name\n  const formatTagName = tagId => {\n    const tag = tags.find(t => t.id === tagId);\n    return tag ? tag.name : tagId;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-indigo-300\",\n        children: \"Recurring Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-indigo-400\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-8 w-8 mr-3\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-indigo-300\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  if (recurring.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-indigo-300\",\n        children: \"Recurring Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No recurring transactions set up yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-indigo-300\",\n        children: \"Recurring Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processAllDue,\n        className: \"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\",\n        children: \"Process Due\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: recurring.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg ${item.isIncome ? 'bg-gray-700/80 border-l-4 border-green-500' : 'bg-gray-700/80 border-l-4 border-red-500'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-white\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-400 mt-1\",\n              children: formatCategory(item.category)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `font-medium ${item.isIncome ? 'text-green-400' : 'text-red-400'}`,\n            children: [item.isIncome ? '+' : '-', \" Rp \", formatRupiah(item.amount)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2 space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm bg-indigo-900/50 text-indigo-300 px-2 py-1 rounded\",\n            children: formatFrequency(item.frequency)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm bg-gray-900/50 text-gray-300 px-2 py-1 rounded\",\n            children: [\"Next: \", new Date(item.nextDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), item.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400 mt-2 bg-gray-800/50 p-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-xs text-gray-500 block mb-1\",\n            children: \"Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), item.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1\",\n            children: item.tags && item.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1\",\n              children: item.tags.map((tagId, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                color: getTagColor(index),\n                children: formatTagName(tagId)\n              }, `${item.id}-${tagId}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateTransaction(item),\n              className: \"text-gray-400 hover:text-green-500 transition-colors duration-200\",\n              title: \"Generate Transaction Now\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M14 5l7 7m0 0l-7 7m7-7H3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (window.confirm('Delete this recurring transaction?')) {\n                  deleteRecurring(item.id);\n                }\n              },\n              className: \"text-gray-400 hover:text-red-500 transition-colors duration-200\",\n              title: \"Delete Recurring Transaction\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n_s(RecurringList, \"0bHKFdWqiY07yGzEAZoWyz0fHUA=\");\n_c = RecurringList;\nexport default RecurringList;\nvar _c;\n$RefreshReg$(_c, \"RecurringList\");","map":{"version":3,"names":["React","useState","useEffect","Badge","categoryDB","tagDB","recurringDB","expenseDB","walletDB","jsxDEV","_jsxDEV","RecurringList","dbInitialized","refreshData","_s","recurring","setRecurring","categories","setCategories","tags","setTags","isLoading","setIsLoading","loadData","recurringData","getAll","categoryData","tagData","savedRecurring","localStorage","getItem","JSON","parse","savedCategories","savedTags","error","console","generateTransaction","recurringItem","newTransaction","id","Date","now","name","amount","category","walletId","isIncome","notes","date","toISOString","slice","add","wallets","wallet","find","w","adjustment","parseFloat","balance","update","walletError","nextDate","calculateNextDate","frequency","deleteRecurring","delete","updatedRecurring","filter","item","setItem","stringify","processAllDue","dueTransactions","getDueTransactions","transaction","currentDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","formatFrequency","frequencies","daily","weekly","biweekly","monthly","quarterly","annually","formatCategory","categoryId","cat","formatRupiah","number","Intl","NumberFormat","format","getTagColor","index","colors","length","formatTagName","tagId","tag","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","onClick","map","toLocaleDateString","color","title","xmlns","strokeLinecap","strokeLinejoin","window","confirm","_c","$RefreshReg$"],"sources":["/Users/ddm/expense-tracker/src/components/RecurringList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Badge from './Badge';\nimport { categoryDB, tagDB, recurringDB, expenseDB, walletDB } from '../utils/db';\n\nfunction RecurringList({ dbInitialized = false, refreshData }) {\n  const [recurring, setRecurring] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load recurring transactions\n  useEffect(() => {\n    loadData();\n  }, [dbInitialized, refreshData]);\n\n  const loadData = async () => {\n    setIsLoading(true);\n    try {\n      if (dbInitialized) {\n        // Load from IndexedDB\n        const recurringData = await recurringDB.getAll();\n        setRecurring(recurringData);\n        \n        // Load categories and tags for display\n        const categoryData = await categoryDB.getAll();\n        setCategories(categoryData);\n        \n        const tagData = await tagDB.getAll();\n        setTags(tagData);\n      } else {\n        // Fallback to localStorage if needed\n        const savedRecurring = localStorage.getItem('recurring-transactions');\n        if (savedRecurring) {\n          setRecurring(JSON.parse(savedRecurring));\n        }\n        \n        // Load categories\n        const savedCategories = localStorage.getItem('expense-categories');\n        if (savedCategories) {\n          setCategories(JSON.parse(savedCategories));\n        }\n        \n        // Load tags\n        const savedTags = localStorage.getItem('expense-tags');\n        if (savedTags) {\n          setTags(JSON.parse(savedTags));\n        }\n      }\n    } catch (error) {\n      console.error('Error loading recurring transactions:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate a transaction from a recurring template\n  const generateTransaction = async (recurringItem) => {\n    try {\n      // Create transaction\n      const newTransaction = {\n        id: Date.now(),\n        name: recurringItem.name,\n        amount: recurringItem.amount,\n        category: recurringItem.category,\n        tags: [...recurringItem.tags, 'recurring'], // Add recurring tag\n        walletId: recurringItem.walletId,\n        isIncome: recurringItem.isIncome,\n        notes: recurringItem.notes,\n        date: new Date().toISOString().slice(0, 10) // Today's date\n      };\n      \n      // Save to database\n      if (dbInitialized) {\n        await expenseDB.add(newTransaction);\n        \n        // Update wallet balance\n        try {\n          const wallets = await walletDB.getAll();\n          const wallet = wallets.find(w => w.id === newTransaction.walletId);\n          \n          if (wallet) {\n            // For income add to balance, for expense subtract\n            const adjustment = newTransaction.isIncome ? \n              parseFloat(newTransaction.amount) : \n              -parseFloat(newTransaction.amount);\n              \n            wallet.balance = parseFloat(wallet.balance) + adjustment;\n            await walletDB.update(wallet);\n          }\n        } catch (walletError) {\n          console.error('Error updating wallet balance:', walletError);\n        }\n        \n        // Calculate next occurrence date\n        const nextDate = calculateNextDate(\n          recurringItem.frequency, \n          new Date().toISOString().slice(0, 10)\n        );\n        \n        // Update recurring item's next date\n        await recurringDB.update({\n          ...recurringItem,\n          nextDate\n        });\n        \n        // Refresh data\n        loadData();\n      }\n    } catch (error) {\n      console.error('Error generating transaction:', error);\n    }\n  };\n\n  // Delete a recurring transaction\n  const deleteRecurring = async (id) => {\n    try {\n      if (dbInitialized) {\n        await recurringDB.delete(id);\n      } else {\n        // Fallback to localStorage\n        const savedRecurring = JSON.parse(localStorage.getItem('recurring-transactions') || '[]');\n        const updatedRecurring = savedRecurring.filter(item => item.id !== id);\n        localStorage.setItem('recurring-transactions', JSON.stringify(updatedRecurring));\n      }\n      // Refresh the list\n      loadData();\n    } catch (error) {\n      console.error('Error deleting recurring transaction:', error);\n    }\n  };\n\n  // Process pending recurring transactions\n  const processAllDue = async () => {\n    if (!dbInitialized) return;\n    \n    try {\n      // Get all due transactions\n      const dueTransactions = await recurringDB.getDueTransactions();\n      \n      // Process each one\n      for (const transaction of dueTransactions) {\n        await generateTransaction(transaction);\n      }\n      \n      // Refresh the list\n      loadData();\n    } catch (error) {\n      console.error('Error processing due transactions:', error);\n    }\n  };\n\n  // Calculate next date based on frequency\n  const calculateNextDate = (frequency, currentDate) => {\n    const date = new Date(currentDate);\n    \n    switch (frequency) {\n      case 'daily':\n        date.setDate(date.getDate() + 1);\n        break;\n      case 'weekly':\n        date.setDate(date.getDate() + 7);\n        break;\n      case 'biweekly':\n        date.setDate(date.getDate() + 14);\n        break;\n      case 'monthly':\n        date.setMonth(date.getMonth() + 1);\n        break;\n      case 'quarterly':\n        date.setMonth(date.getMonth() + 3);\n        break;\n      case 'annually':\n        date.setFullYear(date.getFullYear() + 1);\n        break;\n      default:\n        date.setMonth(date.getMonth() + 1); // Default to monthly\n    }\n    \n    return date.toISOString().slice(0, 10);\n  };\n\n  // Format human-readable frequency\n  const formatFrequency = (frequency) => {\n    const frequencies = {\n      daily: 'Daily',\n      weekly: 'Weekly',\n      biweekly: 'Bi-weekly',\n      monthly: 'Monthly',\n      quarterly: 'Quarterly',\n      annually: 'Annually'\n    };\n    \n    return frequencies[frequency] || frequency;\n  };\n\n  // Format category name\n  const formatCategory = (categoryId) => {\n    const category = categories.find(cat => cat.id === categoryId);\n    return category ? category.name : categoryId;\n  };\n\n  // Format rupiah\n  const formatRupiah = (number) => {\n    return new Intl.NumberFormat('id-ID').format(number);\n  };\n\n  // Get color for tag badge\n  const getTagColor = (index) => {\n    const colors = ['bg-blue-600', 'bg-purple-600', 'bg-green-600', 'bg-yellow-600', 'bg-pink-600'];\n    return colors[index % colors.length];\n  };\n\n  // Format tag name\n  const formatTagName = (tagId) => {\n    const tag = tags.find(t => t.id === tagId);\n    return tag ? tag.name : tagId;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4 text-indigo-300\">Recurring Transactions</h2>\n        <div className=\"flex justify-center items-center py-8\">\n          <div className=\"text-indigo-400\">\n            <svg className=\"animate-spin h-8 w-8 mr-3\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n          <p className=\"text-indigo-300\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (recurring.length === 0) {\n    return (\n      <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4 text-indigo-300\">Recurring Transactions</h2>\n        <div className=\"p-6 text-center\">\n          <p className=\"text-gray-400\">No recurring transactions set up yet.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg mb-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-indigo-300\">Recurring Transactions</h2>\n        <button \n          onClick={processAllDue}\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n        >\n          Process Due\n        </button>\n      </div>\n      \n      <div className=\"space-y-4\">\n        {recurring.map((item) => (\n          <div\n            key={item.id}\n            className={`p-4 rounded-lg ${\n              item.isIncome ? 'bg-gray-700/80 border-l-4 border-green-500' : 'bg-gray-700/80 border-l-4 border-red-500'\n            }`}\n          >\n            <div className=\"flex justify-between items-start mb-2\">\n              <div>\n                <div className=\"font-medium text-white\">{item.name}</div>\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  {formatCategory(item.category)}\n                </div>\n              </div>\n              <div className={`font-medium ${item.isIncome ? 'text-green-400' : 'text-red-400'}`}>\n                {item.isIncome ? '+' : '-'} Rp {formatRupiah(item.amount)}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center mt-2 space-x-2\">\n              <span className=\"text-sm bg-indigo-900/50 text-indigo-300 px-2 py-1 rounded\">\n                {formatFrequency(item.frequency)}\n              </span>\n              <span className=\"text-sm bg-gray-900/50 text-gray-300 px-2 py-1 rounded\">\n                Next: {new Date(item.nextDate).toLocaleDateString()}\n              </span>\n            </div>\n            \n            {/* Notes if available */}\n            {item.notes && (\n              <div className=\"text-sm text-gray-400 mt-2 bg-gray-800/50 p-2 rounded\">\n                <span className=\"font-medium text-xs text-gray-500 block mb-1\">Notes:</span>\n                {item.notes}\n              </div>\n            )}\n            \n            <div className=\"flex justify-between items-center mt-3\">\n              {/* Tags */}\n              <div className=\"flex flex-wrap gap-1\">\n                {item.tags && item.tags.length > 0 && (\n                  <div className=\"flex flex-wrap gap-1\">\n                    {item.tags.map((tagId, index) => (\n                      <Badge key={`${item.id}-${tagId}`} color={getTagColor(index)}>\n                        {formatTagName(tagId)}\n                      </Badge>\n                    ))}\n                  </div>\n                )}\n              </div>\n              \n              {/* Action buttons */}\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => generateTransaction(item)}\n                  className=\"text-gray-400 hover:text-green-500 transition-colors duration-200\"\n                  title=\"Generate Transaction Now\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => {\n                    if (window.confirm('Delete this recurring transaction?')) {\n                      deleteRecurring(item.id);\n                    }\n                  }}\n                  className=\"text-gray-400 hover:text-red-500 transition-colors duration-200\"\n                  title=\"Delete Recurring Transaction\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default RecurringList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}