{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ExpenseSummary(_ref){let{expenses,total}=_ref;// Calculate totals\nconst totalIncome=expenses.filter(expense=>expense.isIncome).reduce((sum,expense)=>sum+parseFloat(expense.amount),0);const totalExpenses=expenses.filter(expense=>!expense.isIncome).reduce((sum,expense)=>sum+parseFloat(expense.amount),0);const netCashFlow=totalIncome-totalExpenses;// Calculate highest expense\nconst highestExpense=expenses.length>0?Math.max(...expenses.filter(expense=>!expense.isIncome).map(expense=>expense.amount),0):0;// Calculate highest income\nconst highestIncome=expenses.length>0?Math.max(...expenses.filter(expense=>expense.isIncome).map(expense=>expense.amount),0):0;// Calculate average transaction\nconst averageTransaction=expenses.length>0?total/expenses.length:0;// Format number as Indonesian Rupiah\nconst formatRupiah=amount=>{return new Intl.NumberFormat('id-ID').format(amount);};return/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-4 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 mb-1\",children:\"Income\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xl font-semibold text-green-400\",children:[\"Rp \",formatRupiah(totalIncome)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-4 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 mb-1\",children:\"Expenses\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xl font-semibold text-red-400\",children:[\"Rp \",formatRupiah(totalExpenses)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-4 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 mb-1\",children:\"Net Cash Flow\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xl font-semibold \".concat(netCashFlow>=0?'text-green-400':'text-red-400'),children:[\"Rp \",formatRupiah(Math.abs(netCashFlow)),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs ml-1\",children:netCashFlow>=0?'(+)':'(-)'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-4 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 mb-1\",children:\"Transaction Count\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-semibold text-indigo-400\",children:expenses.length}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[expenses.filter(e=>e.isIncome).length,\" income / \",expenses.filter(e=>!e.isIncome).length,\" expense\"]})]})]});}export default ExpenseSummary;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ExpenseSummary","_ref","expenses","total","totalIncome","filter","expense","isIncome","reduce","sum","parseFloat","amount","totalExpenses","netCashFlow","highestExpense","length","Math","max","map","highestIncome","averageTransaction","formatRupiah","Intl","NumberFormat","format","className","children","concat","abs","e"],"sources":["/Users/ddm/expense-tracker/src/components/ExpenseSummary.js"],"sourcesContent":["import React from 'react';\n\nfunction ExpenseSummary({ expenses, total }) {\n  // Calculate totals\n  const totalIncome = expenses\n    .filter(expense => expense.isIncome)\n    .reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n    \n  const totalExpenses = expenses\n    .filter(expense => !expense.isIncome)\n    .reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n    \n  const netCashFlow = totalIncome - totalExpenses;\n  \n  // Calculate highest expense\n  const highestExpense = expenses.length > 0\n    ? Math.max(...expenses.filter(expense => !expense.isIncome).map(expense => expense.amount), 0)\n    : 0;\n    \n  // Calculate highest income\n  const highestIncome = expenses.length > 0\n    ? Math.max(...expenses.filter(expense => expense.isIncome).map(expense => expense.amount), 0) \n    : 0;\n  \n  // Calculate average transaction\n  const averageTransaction = expenses.length > 0\n    ? total / expenses.length\n    : 0;\n  \n  // Format number as Indonesian Rupiah\n  const formatRupiah = (amount) => {\n    return new Intl.NumberFormat('id-ID').format(amount);\n  };\n  \n  return (\n    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n      <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\n        <div className=\"text-sm text-gray-400 mb-1\">Income</div>\n        <div className=\"text-xl font-semibold text-green-400\">Rp {formatRupiah(totalIncome)}</div>\n      </div>\n      \n      <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\n        <div className=\"text-sm text-gray-400 mb-1\">Expenses</div>\n        <div className=\"text-xl font-semibold text-red-400\">Rp {formatRupiah(totalExpenses)}</div>\n      </div>\n      \n      <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\n        <div className=\"text-sm text-gray-400 mb-1\">Net Cash Flow</div>\n        <div className={`text-xl font-semibold ${netCashFlow >= 0 ? 'text-green-400' : 'text-red-400'}`}>\n          Rp {formatRupiah(Math.abs(netCashFlow))}\n          <span className=\"text-xs ml-1\">{netCashFlow >= 0 ? '(+)' : '(-)'}</span>\n        </div>\n      </div>\n      \n      <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\n        <div className=\"text-sm text-gray-400 mb-1\">Transaction Count</div>\n        <div className=\"text-xl font-semibold text-indigo-400\">{expenses.length}</div>\n        <div className=\"text-xs text-gray-500 mt-1\">\n          {expenses.filter(e => e.isIncome).length} income / {expenses.filter(e => !e.isIncome).length} expense\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseSummary;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAsB,IAArB,CAAEC,QAAQ,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACzC;AACA,KAAM,CAAAG,WAAW,CAAGF,QAAQ,CACzBG,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACC,QAAQ,CAAC,CACnCC,MAAM,CAAC,CAACC,GAAG,CAAEH,OAAO,GAAKG,GAAG,CAAGC,UAAU,CAACJ,OAAO,CAACK,MAAM,CAAC,CAAE,CAAC,CAAC,CAEhE,KAAM,CAAAC,aAAa,CAAGV,QAAQ,CAC3BG,MAAM,CAACC,OAAO,EAAI,CAACA,OAAO,CAACC,QAAQ,CAAC,CACpCC,MAAM,CAAC,CAACC,GAAG,CAAEH,OAAO,GAAKG,GAAG,CAAGC,UAAU,CAACJ,OAAO,CAACK,MAAM,CAAC,CAAE,CAAC,CAAC,CAEhE,KAAM,CAAAE,WAAW,CAAGT,WAAW,CAAGQ,aAAa,CAE/C;AACA,KAAM,CAAAE,cAAc,CAAGZ,QAAQ,CAACa,MAAM,CAAG,CAAC,CACtCC,IAAI,CAACC,GAAG,CAAC,GAAGf,QAAQ,CAACG,MAAM,CAACC,OAAO,EAAI,CAACA,OAAO,CAACC,QAAQ,CAAC,CAACW,GAAG,CAACZ,OAAO,EAAIA,OAAO,CAACK,MAAM,CAAC,CAAE,CAAC,CAAC,CAC5F,CAAC,CAEL;AACA,KAAM,CAAAQ,aAAa,CAAGjB,QAAQ,CAACa,MAAM,CAAG,CAAC,CACrCC,IAAI,CAACC,GAAG,CAAC,GAAGf,QAAQ,CAACG,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACC,QAAQ,CAAC,CAACW,GAAG,CAACZ,OAAO,EAAIA,OAAO,CAACK,MAAM,CAAC,CAAE,CAAC,CAAC,CAC3F,CAAC,CAEL;AACA,KAAM,CAAAS,kBAAkB,CAAGlB,QAAQ,CAACa,MAAM,CAAG,CAAC,CAC1CZ,KAAK,CAAGD,QAAQ,CAACa,MAAM,CACvB,CAAC,CAEL;AACA,KAAM,CAAAM,YAAY,CAAIV,MAAM,EAAK,CAC/B,MAAO,IAAI,CAAAW,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACb,MAAM,CAAC,CACtD,CAAC,CAED,mBACEZ,KAAA,QAAK0B,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eACzD3B,KAAA,QAAK0B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD7B,IAAA,QAAK4B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,QAAM,CAAK,CAAC,cACxD3B,KAAA,QAAK0B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,EAAC,KAAG,CAACL,YAAY,CAACjB,WAAW,CAAC,EAAM,CAAC,EACvF,CAAC,cAENL,KAAA,QAAK0B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD7B,IAAA,QAAK4B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,cAC1D3B,KAAA,QAAK0B,SAAS,CAAC,oCAAoC,CAAAC,QAAA,EAAC,KAAG,CAACL,YAAY,CAACT,aAAa,CAAC,EAAM,CAAC,EACvF,CAAC,cAENb,KAAA,QAAK0B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD7B,IAAA,QAAK4B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,eAAa,CAAK,CAAC,cAC/D3B,KAAA,QAAK0B,SAAS,0BAAAE,MAAA,CAA2Bd,WAAW,EAAI,CAAC,CAAG,gBAAgB,CAAG,cAAc,CAAG,CAAAa,QAAA,EAAC,KAC5F,CAACL,YAAY,CAACL,IAAI,CAACY,GAAG,CAACf,WAAW,CAAC,CAAC,cACvChB,IAAA,SAAM4B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEb,WAAW,EAAI,CAAC,CAAG,KAAK,CAAG,KAAK,CAAO,CAAC,EACrE,CAAC,EACH,CAAC,cAENd,KAAA,QAAK0B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD7B,IAAA,QAAK4B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,mBAAiB,CAAK,CAAC,cACnE7B,IAAA,QAAK4B,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CAAExB,QAAQ,CAACa,MAAM,CAAM,CAAC,cAC9EhB,KAAA,QAAK0B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EACxCxB,QAAQ,CAACG,MAAM,CAACwB,CAAC,EAAIA,CAAC,CAACtB,QAAQ,CAAC,CAACQ,MAAM,CAAC,YAAU,CAACb,QAAQ,CAACG,MAAM,CAACwB,CAAC,EAAI,CAACA,CAAC,CAACtB,QAAQ,CAAC,CAACQ,MAAM,CAAC,UAC/F,EAAK,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAf,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}