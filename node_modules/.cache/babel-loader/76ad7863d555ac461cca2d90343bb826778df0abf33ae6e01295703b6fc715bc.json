{"ast":null,"code":"import _objectSpread from\"/Users/ddm/expense-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import ExpenseForm from'./components/ExpenseForm';import ExpenseList from'./components/ExpenseList';import ExpenseSummary from'./components/ExpenseSummary';import ExpenseChart from'./components/ExpenseChart';import Settings from'./components/Settings';import RecurringForm from'./components/RecurringForm';import RecurringList from'./components/RecurringList';import BottomNavigation from'./components/BottomNavigation';import FloatingActionButton from'./components/FloatingActionButton';import Modal from'./components/Modal';import{Navbar,NavbarDivider,NavbarItem,NavbarLabel,NavbarSection,NavbarSpacer}from'./components/Navbar';import{Dropdown,DropdownButton,DropdownDivider,DropdownItem,DropdownLabel,DropdownMenu}from'./components/Dropdown';import{Avatar}from'./components/Avatar';import{initializeDatabase,expenseDB,categoryDB,walletDB,recurringDB}from'./utils/db';import Wallets from'./components/Wallets';import WalletSummary from'./components/WalletSummary';import{processRecurringTransactions}from'./utils/scheduler';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[activeTab,setActiveTab]=useState('home');const[expenses,setExpenses]=useState([]);const[isLoading,setIsLoading]=useState(true);const[dbInitialized,setDbInitialized]=useState(false);const[isModalOpen,setIsModalOpen]=useState(false);const[isRecurringModalOpen,setIsRecurringModalOpen]=useState(false);const[refreshRecurring,setRefreshRecurring]=useState(0);// Counter to trigger refreshes\n// Initialize database\nuseEffect(()=>{const init=async()=>{try{const initialized=await initializeDatabase();setDbInitialized(initialized);if(initialized){// Load all expenses after DB initialization\nloadExpenses();// Check for and process any recurring transactions that are due\nconst result=await processRecurringTransactions();if(result.processed>0){// If transactions were processed, refresh the expenses list\nloadExpenses();// And update the recurring transactions counter\nsetRefreshRecurring(prev=>prev+1);}}else{// Fall back to localStorage if IndexedDB fails\nfallbackToLocalStorage();}}catch(error){console.error('Failed to initialize database:',error);fallbackToLocalStorage();}finally{setIsLoading(false);}};init();},[]);// Fallback to localStorage if IndexedDB fails\nconst fallbackToLocalStorage=()=>{const savedExpenses=localStorage.getItem('expenses');if(savedExpenses){setExpenses(JSON.parse(savedExpenses));}setIsLoading(false);};// Load expenses from IndexedDB\nconst loadExpenses=async()=>{try{const allExpenses=await expenseDB.getAll();setExpenses(allExpenses);}catch(error){console.error('Error loading expenses:',error);fallbackToLocalStorage();}finally{setIsLoading(false);}};// Save expenses to localStorage (fallback)\nuseEffect(()=>{if(!dbInitialized&&expenses.length>0){localStorage.setItem('expenses',JSON.stringify(expenses));}},[expenses,dbInitialized]);// Add new expense\nconst addExpense=async expense=>{const newExpense=_objectSpread(_objectSpread({},expense),{},{id:Date.now(),// Simple way to generate unique ID\ndate:new Date().toISOString().slice(0,10)// YYYY-MM-DD format\n});if(dbInitialized){try{// Add the expense to the database\nawait expenseDB.add(newExpense);// Update wallet balance (subtract the expense amount)\nif(newExpense.walletId){try{// Get the current wallet\nconst wallets=await walletDB.getAll();const wallet=wallets.find(w=>w.id===newExpense.walletId);if(wallet){// Subtract the expense amount from the wallet balance\nwallet.balance=parseFloat(wallet.balance)-parseFloat(newExpense.amount);await walletDB.update(wallet);}}catch(walletError){console.error('Error updating wallet balance:',walletError);}}// Reload expenses from DB\nloadExpenses();// Close modal after adding expense\nsetIsModalOpen(false);}catch(error){console.error('Error adding expense:',error);// Fall back to state-only update\nsetExpenses(prevExpenses=>[...prevExpenses,newExpense]);setIsModalOpen(false);}}else{// If DB not initialized, just update state\nsetExpenses(prevExpenses=>[...prevExpenses,newExpense]);// Also update wallet in localStorage if available\ntry{const savedWallets=localStorage.getItem('wallets');if(savedWallets&&newExpense.walletId){const wallets=JSON.parse(savedWallets);const walletIndex=wallets.findIndex(w=>w.id===newExpense.walletId);if(walletIndex!==-1){wallets[walletIndex].balance=parseFloat(wallets[walletIndex].balance)-parseFloat(newExpense.amount);localStorage.setItem('wallets',JSON.stringify(wallets));}}}catch(e){console.error('Error updating wallet in localStorage:',e);}// Close modal after adding expense\nsetIsModalOpen(false);}};// Update existing expense\nconst updateExpense=async updatedExpense=>{if(dbInitialized){try{// Find the original expense to get the original amount and wallet\nconst allExpenses=await expenseDB.getAll();const originalExpense=allExpenses.find(e=>e.id===updatedExpense.id);if(originalExpense){// If wallets are different or amounts are different, adjust balances\nif(originalExpense.walletId!==updatedExpense.walletId||parseFloat(originalExpense.amount)!==parseFloat(updatedExpense.amount)){try{const wallets=await walletDB.getAll();// Return money to the original wallet\nif(originalExpense.walletId){const originalWallet=wallets.find(w=>w.id===originalExpense.walletId);if(originalWallet){originalWallet.balance=parseFloat(originalWallet.balance)+parseFloat(originalExpense.amount);await walletDB.update(originalWallet);}}// Deduct from the new wallet\nif(updatedExpense.walletId){const newWallet=wallets.find(w=>w.id===updatedExpense.walletId);if(newWallet){newWallet.balance=parseFloat(newWallet.balance)-parseFloat(updatedExpense.amount);await walletDB.update(newWallet);}}}catch(walletError){console.error('Error adjusting wallet balances:',walletError);}}}// Update the expense\nawait expenseDB.update(updatedExpense);// Reload expenses from DB\nloadExpenses();}catch(error){console.error('Error updating expense:',error);// Fall back to state-only update\nsetExpenses(prevExpenses=>prevExpenses.map(expense=>expense.id===updatedExpense.id?updatedExpense:expense));}}else{// If DB not initialized, handle localStorage\nconst savedExpenses=JSON.parse(localStorage.getItem('expenses')||'[]');const originalExpense=savedExpenses.find(e=>e.id===updatedExpense.id);// Adjust wallet balances in localStorage if needed\nif(originalExpense&&(originalExpense.walletId!==updatedExpense.walletId||parseFloat(originalExpense.amount)!==parseFloat(updatedExpense.amount))){try{const savedWallets=localStorage.getItem('wallets');if(savedWallets){let wallets=JSON.parse(savedWallets);// Return money to the original wallet\nif(originalExpense.walletId){const originalWalletIndex=wallets.findIndex(w=>w.id===originalExpense.walletId);if(originalWalletIndex!==-1){wallets[originalWalletIndex].balance=parseFloat(wallets[originalWalletIndex].balance)+parseFloat(originalExpense.amount);}}// Deduct from the new wallet\nif(updatedExpense.walletId){const newWalletIndex=wallets.findIndex(w=>w.id===updatedExpense.walletId);if(newWalletIndex!==-1){wallets[newWalletIndex].balance=parseFloat(wallets[newWalletIndex].balance)-parseFloat(updatedExpense.amount);}}localStorage.setItem('wallets',JSON.stringify(wallets));}}catch(e){console.error('Error updating wallet in localStorage:',e);}}// Update expenses in state\nsetExpenses(prevExpenses=>prevExpenses.map(expense=>expense.id===updatedExpense.id?updatedExpense:expense));}};// Delete expense\nconst deleteExpense=async id=>{if(dbInitialized){try{// Find the expense to get its amount and wallet\nconst allExpenses=await expenseDB.getAll();const expenseToDelete=allExpenses.find(e=>e.id===id);if(expenseToDelete&&expenseToDelete.walletId){try{// Get the wallet\nconst wallets=await walletDB.getAll();const wallet=wallets.find(w=>w.id===expenseToDelete.walletId);if(wallet){// Add the expense amount back to the wallet balance (since expense is being deleted)\nwallet.balance=parseFloat(wallet.balance)+parseFloat(expenseToDelete.amount);await walletDB.update(wallet);}}catch(walletError){console.error('Error updating wallet balance:',walletError);}}// Delete the expense\nawait expenseDB.delete(id);// Reload expenses from DB\nloadExpenses();}catch(error){console.error('Error deleting expense:',error);// Fall back to state-only update\nsetExpenses(prevExpenses=>prevExpenses.filter(expense=>expense.id!==id));}}else{// If DB not initialized, find the expense in state before filtering\nconst expenseToDelete=expenses.find(e=>e.id===id);// Update wallet in localStorage if available\nif(expenseToDelete&&expenseToDelete.walletId){try{const savedWallets=localStorage.getItem('wallets');if(savedWallets){let wallets=JSON.parse(savedWallets);const walletIndex=wallets.findIndex(w=>w.id===expenseToDelete.walletId);if(walletIndex!==-1){wallets[walletIndex].balance=parseFloat(wallets[walletIndex].balance)+parseFloat(expenseToDelete.amount);localStorage.setItem('wallets',JSON.stringify(wallets));}}}catch(e){console.error('Error updating wallet in localStorage:',e);}}// Update state\nsetExpenses(prevExpenses=>prevExpenses.filter(expense=>expense.id!==id));}};// Calculate total expenses and income\nconst totalExpenses=expenses.filter(expense=>!expense.isIncome).reduce((total,expense)=>total+parseFloat(expense.amount),0);const totalIncome=expenses.filter(expense=>expense.isIncome).reduce((total,expense)=>total+parseFloat(expense.amount),0);const netCashFlow=totalIncome-totalExpenses;// Add recurring transaction\nconst addRecurringTransaction=async transaction=>{if(dbInitialized){try{// Add to database\nawait recurringDB.add(transaction);// Close modal\nsetIsRecurringModalOpen(false);// Refresh the recurring list\nsetRefreshRecurring(prev=>prev+1);}catch(error){console.error('Error adding recurring transaction:',error);}}else{// Fallback to localStorage\ntry{const savedRecurring=JSON.parse(localStorage.getItem('recurring-transactions')||'[]');savedRecurring.push(transaction);localStorage.setItem('recurring-transactions',JSON.stringify(savedRecurring));// Close modal\nsetIsRecurringModalOpen(false);// Refresh the list\nsetRefreshRecurring(prev=>prev+1);}catch(error){console.error('Error saving recurring transaction to localStorage:',error);}}};// Render content based on active tab\nconst renderContent=()=>{if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-indigo-400\",children:/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin h-10 w-10 mr-3\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\",fill:\"none\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-indigo-300 text-lg font-medium\",children:\"Loading...\"})]});}switch(activeTab){case'settings':return/*#__PURE__*/_jsx(Settings,{dbInitialized:dbInitialized});case'wallets':return/*#__PURE__*/_jsx(Wallets,{dbInitialized:dbInitialized});case'recurring':return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(RecurringList,{dbInitialized:dbInitialized,refreshData:refreshRecurring}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-8\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsRecurringModalOpen(true),className:\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors shadow-md\",children:\"Add Recurring Transaction\"})})]});case'home':default:return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(WalletSummary,{dbInitialized:dbInitialized}),/*#__PURE__*/_jsx(ExpenseSummary,{expenses:expenses,total:totalExpenses+totalIncome}),/*#__PURE__*/_jsx(ExpenseChart,{expenses:expenses}),/*#__PURE__*/_jsx(ExpenseList,{expenses:expenses,deleteExpense:deleteExpense,updateExpense:updateExpense,dbInitialized:dbInitialized})]});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Navbar,{className:\"fixed top-0 left-0 right-0 shadow-md z-30\",children:[/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsxs(DropdownButton,{as:NavbarItem,children:[/*#__PURE__*/_jsx(NavbarLabel,{className:\"text-indigo-400 font-bold text-xl\",children:\"Rupiah Tracker\"}),/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5 ml-2 text-gray-500\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\",clipRule:\"evenodd\"})})]}),/*#__PURE__*/_jsxs(DropdownMenu,{className:\"min-w-52\",children:[/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setActiveTab('home'),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Home\"})]}),/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setActiveTab('wallets'),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 0v12h8V4H6zm2 2h4v2H8V6z\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Wallets\"})]}),/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setActiveTab('recurring'),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Recurring\"})]}),/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setActiveTab('settings'),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Settings\"})]}),/*#__PURE__*/_jsx(DropdownDivider,{}),/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setIsModalOpen(true),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Add Transaction\"})]})]})]}),/*#__PURE__*/_jsx(NavbarDivider,{className:\"max-md:hidden\"}),/*#__PURE__*/_jsxs(NavbarSection,{className:\"max-md:hidden\",children:[/*#__PURE__*/_jsx(NavbarItem,{onClick:()=>setActiveTab('home'),current:activeTab==='home',children:\"Home\"}),/*#__PURE__*/_jsx(NavbarItem,{onClick:()=>setActiveTab('wallets'),current:activeTab==='wallets',children:\"Wallets\"}),/*#__PURE__*/_jsx(NavbarItem,{onClick:()=>setActiveTab('recurring'),current:activeTab==='recurring',children:\"Recurring\"}),/*#__PURE__*/_jsx(NavbarItem,{onClick:()=>setActiveTab('settings'),current:activeTab==='settings',children:\"Settings\"})]}),/*#__PURE__*/_jsx(NavbarSpacer,{}),/*#__PURE__*/_jsx(NavbarSection,{children:/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsx(DropdownButton,{as:NavbarItem,children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Avatar,{initials:\"RS\",className:\"bg-indigo-600\"}),dbInitialized&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -top-1 -right-1 block h-2.5 w-2.5 rounded-full bg-green-400 border-2 border-gray-900\"})]})}),/*#__PURE__*/_jsxs(DropdownMenu,{className:\"min-w-52\",anchor:\"bottom end\",children:[/*#__PURE__*/_jsxs(DropdownItem,{onClick:()=>setActiveTab('settings'),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Settings\"})]}),/*#__PURE__*/_jsx(DropdownDivider,{}),/*#__PURE__*/_jsxs(DropdownItem,{children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9a1 1 0 00-1-1z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"About\"})]}),/*#__PURE__*/_jsxs(DropdownItem,{children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(DropdownLabel,{children:\"Feedback\"})]}),dbInitialized&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-2 text-xs text-green-400 flex items-center\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-4 w-4 mr-1\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\",clipRule:\"evenodd\"})}),\"Using IndexedDB\"]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto px-6 pb-24 pt-20\",children:[renderContent(),activeTab==='home'&&/*#__PURE__*/_jsx(\"div\",{className:\"md:hidden\",children:/*#__PURE__*/_jsx(FloatingActionButton,{onClick:()=>setIsModalOpen(true)})}),/*#__PURE__*/_jsx(Modal,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false),children:/*#__PURE__*/_jsx(ExpenseForm,{addExpense:addExpense,dbInitialized:dbInitialized})}),/*#__PURE__*/_jsx(Modal,{isOpen:isRecurringModalOpen,onClose:()=>setIsRecurringModalOpen(false),children:/*#__PURE__*/_jsx(RecurringForm,{addRecurringTransaction:addRecurringTransaction,dbInitialized:dbInitialized})}),/*#__PURE__*/_jsx(\"div\",{className:\"md:hidden\",children:/*#__PURE__*/_jsx(BottomNavigation,{activeTab:activeTab,setActiveTab:setActiveTab})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ExpenseForm","ExpenseList","ExpenseSummary","ExpenseChart","Settings","RecurringForm","RecurringList","BottomNavigation","FloatingActionButton","Modal","Navbar","NavbarDivider","NavbarItem","NavbarLabel","NavbarSection","NavbarSpacer","Dropdown","DropdownButton","DropdownDivider","DropdownItem","DropdownLabel","DropdownMenu","Avatar","initializeDatabase","expenseDB","categoryDB","walletDB","recurringDB","Wallets","WalletSummary","processRecurringTransactions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","activeTab","setActiveTab","expenses","setExpenses","isLoading","setIsLoading","dbInitialized","setDbInitialized","isModalOpen","setIsModalOpen","isRecurringModalOpen","setIsRecurringModalOpen","refreshRecurring","setRefreshRecurring","init","initialized","loadExpenses","result","processed","prev","fallbackToLocalStorage","error","console","savedExpenses","localStorage","getItem","JSON","parse","allExpenses","getAll","length","setItem","stringify","addExpense","expense","newExpense","_objectSpread","id","Date","now","date","toISOString","slice","add","walletId","wallets","wallet","find","w","balance","parseFloat","amount","update","walletError","prevExpenses","savedWallets","walletIndex","findIndex","e","updateExpense","updatedExpense","originalExpense","originalWallet","newWallet","map","originalWalletIndex","newWalletIndex","deleteExpense","expenseToDelete","delete","filter","totalExpenses","isIncome","reduce","total","totalIncome","netCashFlow","addRecurringTransaction","transaction","savedRecurring","push","renderContent","className","children","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","refreshData","onClick","as","xmlns","fillRule","clipRule","current","initials","anchor","isOpen","onClose"],"sources":["/Users/ddm/expense-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ExpenseForm from './components/ExpenseForm';\nimport ExpenseList from './components/ExpenseList';\nimport ExpenseSummary from './components/ExpenseSummary';\nimport ExpenseChart from './components/ExpenseChart';\nimport Settings from './components/Settings';\nimport RecurringForm from './components/RecurringForm';\nimport RecurringList from './components/RecurringList';\nimport BottomNavigation from './components/BottomNavigation';\nimport FloatingActionButton from './components/FloatingActionButton';\nimport Modal from './components/Modal';\nimport { \n  Navbar, \n  NavbarDivider, \n  NavbarItem, \n  NavbarLabel, \n  NavbarSection, \n  NavbarSpacer \n} from './components/Navbar';\nimport { \n  Dropdown, \n  DropdownButton, \n  DropdownDivider, \n  DropdownItem, \n  DropdownLabel, \n  DropdownMenu \n} from './components/Dropdown';\nimport { Avatar } from './components/Avatar';\nimport { initializeDatabase, expenseDB, categoryDB, walletDB, recurringDB } from './utils/db';\nimport Wallets from './components/Wallets';\nimport WalletSummary from './components/WalletSummary';\nimport { processRecurringTransactions } from './utils/scheduler';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('home');\n  const [expenses, setExpenses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [dbInitialized, setDbInitialized] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isRecurringModalOpen, setIsRecurringModalOpen] = useState(false);\n  const [refreshRecurring, setRefreshRecurring] = useState(0); // Counter to trigger refreshes\n\n  // Initialize database\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const initialized = await initializeDatabase();\n        setDbInitialized(initialized);\n        \n        if (initialized) {\n          // Load all expenses after DB initialization\n          loadExpenses();\n          \n          // Check for and process any recurring transactions that are due\n          const result = await processRecurringTransactions();\n          if (result.processed > 0) {\n            // If transactions were processed, refresh the expenses list\n            loadExpenses();\n            // And update the recurring transactions counter\n            setRefreshRecurring(prev => prev + 1);\n          }\n        } else {\n          // Fall back to localStorage if IndexedDB fails\n          fallbackToLocalStorage();\n        }\n      } catch (error) {\n        console.error('Failed to initialize database:', error);\n        fallbackToLocalStorage();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    init();\n  }, []);\n\n  // Fallback to localStorage if IndexedDB fails\n  const fallbackToLocalStorage = () => {\n    const savedExpenses = localStorage.getItem('expenses');\n    if (savedExpenses) {\n      setExpenses(JSON.parse(savedExpenses));\n    }\n    setIsLoading(false);\n  };\n\n  // Load expenses from IndexedDB\n  const loadExpenses = async () => {\n    try {\n      const allExpenses = await expenseDB.getAll();\n      setExpenses(allExpenses);\n    } catch (error) {\n      console.error('Error loading expenses:', error);\n      fallbackToLocalStorage();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Save expenses to localStorage (fallback)\n  useEffect(() => {\n    if (!dbInitialized && expenses.length > 0) {\n      localStorage.setItem('expenses', JSON.stringify(expenses));\n    }\n  }, [expenses, dbInitialized]);\n\n  // Add new expense\n  const addExpense = async (expense) => {\n    const newExpense = {\n      ...expense,\n      id: Date.now(), // Simple way to generate unique ID\n      date: new Date().toISOString().slice(0, 10) // YYYY-MM-DD format\n    };\n    \n    if (dbInitialized) {\n      try {\n        // Add the expense to the database\n        await expenseDB.add(newExpense);\n        \n        // Update wallet balance (subtract the expense amount)\n        if (newExpense.walletId) {\n          try {\n            // Get the current wallet\n            const wallets = await walletDB.getAll();\n            const wallet = wallets.find(w => w.id === newExpense.walletId);\n            \n            if (wallet) {\n              // Subtract the expense amount from the wallet balance\n              wallet.balance = parseFloat(wallet.balance) - parseFloat(newExpense.amount);\n              await walletDB.update(wallet);\n            }\n          } catch (walletError) {\n            console.error('Error updating wallet balance:', walletError);\n          }\n        }\n        \n        // Reload expenses from DB\n        loadExpenses();\n        // Close modal after adding expense\n        setIsModalOpen(false);\n      } catch (error) {\n        console.error('Error adding expense:', error);\n        // Fall back to state-only update\n        setExpenses(prevExpenses => [...prevExpenses, newExpense]);\n        setIsModalOpen(false);\n      }\n    } else {\n      // If DB not initialized, just update state\n      setExpenses(prevExpenses => [...prevExpenses, newExpense]);\n      \n      // Also update wallet in localStorage if available\n      try {\n        const savedWallets = localStorage.getItem('wallets');\n        if (savedWallets && newExpense.walletId) {\n          const wallets = JSON.parse(savedWallets);\n          const walletIndex = wallets.findIndex(w => w.id === newExpense.walletId);\n          \n          if (walletIndex !== -1) {\n            wallets[walletIndex].balance = parseFloat(wallets[walletIndex].balance) - parseFloat(newExpense.amount);\n            localStorage.setItem('wallets', JSON.stringify(wallets));\n          }\n        }\n      } catch (e) {\n        console.error('Error updating wallet in localStorage:', e);\n      }\n      \n      // Close modal after adding expense\n      setIsModalOpen(false);\n    }\n  };\n\n  // Update existing expense\n  const updateExpense = async (updatedExpense) => {\n    if (dbInitialized) {\n      try {\n        // Find the original expense to get the original amount and wallet\n        const allExpenses = await expenseDB.getAll();\n        const originalExpense = allExpenses.find(e => e.id === updatedExpense.id);\n        \n        if (originalExpense) {\n          // If wallets are different or amounts are different, adjust balances\n          if (originalExpense.walletId !== updatedExpense.walletId || \n              parseFloat(originalExpense.amount) !== parseFloat(updatedExpense.amount)) {\n            \n            try {\n              const wallets = await walletDB.getAll();\n              \n              // Return money to the original wallet\n              if (originalExpense.walletId) {\n                const originalWallet = wallets.find(w => w.id === originalExpense.walletId);\n                if (originalWallet) {\n                  originalWallet.balance = parseFloat(originalWallet.balance) + parseFloat(originalExpense.amount);\n                  await walletDB.update(originalWallet);\n                }\n              }\n              \n              // Deduct from the new wallet\n              if (updatedExpense.walletId) {\n                const newWallet = wallets.find(w => w.id === updatedExpense.walletId);\n                if (newWallet) {\n                  newWallet.balance = parseFloat(newWallet.balance) - parseFloat(updatedExpense.amount);\n                  await walletDB.update(newWallet);\n                }\n              }\n            } catch (walletError) {\n              console.error('Error adjusting wallet balances:', walletError);\n            }\n          }\n        }\n        \n        // Update the expense\n        await expenseDB.update(updatedExpense);\n        \n        // Reload expenses from DB\n        loadExpenses();\n      } catch (error) {\n        console.error('Error updating expense:', error);\n        // Fall back to state-only update\n        setExpenses(prevExpenses => \n          prevExpenses.map(expense => \n            expense.id === updatedExpense.id ? updatedExpense : expense\n          )\n        );\n      }\n    } else {\n      // If DB not initialized, handle localStorage\n      const savedExpenses = JSON.parse(localStorage.getItem('expenses') || '[]');\n      const originalExpense = savedExpenses.find(e => e.id === updatedExpense.id);\n      \n      // Adjust wallet balances in localStorage if needed\n      if (originalExpense && \n          (originalExpense.walletId !== updatedExpense.walletId || \n           parseFloat(originalExpense.amount) !== parseFloat(updatedExpense.amount))) {\n        \n        try {\n          const savedWallets = localStorage.getItem('wallets');\n          if (savedWallets) {\n            let wallets = JSON.parse(savedWallets);\n            \n            // Return money to the original wallet\n            if (originalExpense.walletId) {\n              const originalWalletIndex = wallets.findIndex(w => w.id === originalExpense.walletId);\n              if (originalWalletIndex !== -1) {\n                wallets[originalWalletIndex].balance = parseFloat(wallets[originalWalletIndex].balance) + parseFloat(originalExpense.amount);\n              }\n            }\n            \n            // Deduct from the new wallet\n            if (updatedExpense.walletId) {\n              const newWalletIndex = wallets.findIndex(w => w.id === updatedExpense.walletId);\n              if (newWalletIndex !== -1) {\n                wallets[newWalletIndex].balance = parseFloat(wallets[newWalletIndex].balance) - parseFloat(updatedExpense.amount);\n              }\n            }\n            \n            localStorage.setItem('wallets', JSON.stringify(wallets));\n          }\n        } catch (e) {\n          console.error('Error updating wallet in localStorage:', e);\n        }\n      }\n      \n      // Update expenses in state\n      setExpenses(prevExpenses => \n        prevExpenses.map(expense => \n          expense.id === updatedExpense.id ? updatedExpense : expense\n        )\n      );\n    }\n  };\n\n  // Delete expense\n  const deleteExpense = async (id) => {\n    if (dbInitialized) {\n      try {\n        // Find the expense to get its amount and wallet\n        const allExpenses = await expenseDB.getAll();\n        const expenseToDelete = allExpenses.find(e => e.id === id);\n        \n        if (expenseToDelete && expenseToDelete.walletId) {\n          try {\n            // Get the wallet\n            const wallets = await walletDB.getAll();\n            const wallet = wallets.find(w => w.id === expenseToDelete.walletId);\n            \n            if (wallet) {\n              // Add the expense amount back to the wallet balance (since expense is being deleted)\n              wallet.balance = parseFloat(wallet.balance) + parseFloat(expenseToDelete.amount);\n              await walletDB.update(wallet);\n            }\n          } catch (walletError) {\n            console.error('Error updating wallet balance:', walletError);\n          }\n        }\n        \n        // Delete the expense\n        await expenseDB.delete(id);\n        \n        // Reload expenses from DB\n        loadExpenses();\n      } catch (error) {\n        console.error('Error deleting expense:', error);\n        // Fall back to state-only update\n        setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n      }\n    } else {\n      // If DB not initialized, find the expense in state before filtering\n      const expenseToDelete = expenses.find(e => e.id === id);\n      \n      // Update wallet in localStorage if available\n      if (expenseToDelete && expenseToDelete.walletId) {\n        try {\n          const savedWallets = localStorage.getItem('wallets');\n          if (savedWallets) {\n            let wallets = JSON.parse(savedWallets);\n            const walletIndex = wallets.findIndex(w => w.id === expenseToDelete.walletId);\n            \n            if (walletIndex !== -1) {\n              wallets[walletIndex].balance = parseFloat(wallets[walletIndex].balance) + parseFloat(expenseToDelete.amount);\n              localStorage.setItem('wallets', JSON.stringify(wallets));\n            }\n          }\n        } catch (e) {\n          console.error('Error updating wallet in localStorage:', e);\n        }\n      }\n      \n      // Update state\n      setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n    }\n  };\n\n  // Calculate total expenses and income\n  const totalExpenses = expenses\n    .filter(expense => !expense.isIncome)\n    .reduce((total, expense) => total + parseFloat(expense.amount), 0);\n    \n  const totalIncome = expenses\n    .filter(expense => expense.isIncome)\n    .reduce((total, expense) => total + parseFloat(expense.amount), 0);\n    \n  const netCashFlow = totalIncome - totalExpenses;\n\n  // Add recurring transaction\n  const addRecurringTransaction = async (transaction) => {\n    if (dbInitialized) {\n      try {\n        // Add to database\n        await recurringDB.add(transaction);\n        // Close modal\n        setIsRecurringModalOpen(false);\n        // Refresh the recurring list\n        setRefreshRecurring(prev => prev + 1);\n      } catch (error) {\n        console.error('Error adding recurring transaction:', error);\n      }\n    } else {\n      // Fallback to localStorage\n      try {\n        const savedRecurring = JSON.parse(localStorage.getItem('recurring-transactions') || '[]');\n        savedRecurring.push(transaction);\n        localStorage.setItem('recurring-transactions', JSON.stringify(savedRecurring));\n        \n        // Close modal\n        setIsRecurringModalOpen(false);\n        // Refresh the list\n        setRefreshRecurring(prev => prev + 1);\n      } catch (error) {\n        console.error('Error saving recurring transaction to localStorage:', error);\n      }\n    }\n  };\n\n  // Render content based on active tab\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <div className=\"flex justify-center items-center py-12\">\n          <div className=\"text-indigo-400\">\n            <svg className=\"animate-spin h-10 w-10 mr-3\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n          <p className=\"text-indigo-300 text-lg font-medium\">Loading...</p>\n        </div>\n      );\n    }\n\n    switch (activeTab) {\n      case 'settings':\n        return <Settings dbInitialized={dbInitialized} />;\n      case 'wallets':\n        return <Wallets dbInitialized={dbInitialized} />;\n      case 'recurring':\n        return (\n          <>\n            <RecurringList dbInitialized={dbInitialized} refreshData={refreshRecurring} />\n            <div className=\"flex justify-end mb-8\">\n              <button \n                onClick={() => setIsRecurringModalOpen(true)}\n                className=\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors shadow-md\"\n              >\n                Add Recurring Transaction\n              </button>\n            </div>\n          </>\n        );\n      case 'home':\n      default:\n        return (\n          <>\n            <WalletSummary dbInitialized={dbInitialized} />\n            <ExpenseSummary \n              expenses={expenses} \n              total={totalExpenses + totalIncome} \n            />\n            <ExpenseChart expenses={expenses} />\n            <ExpenseList \n              expenses={expenses} \n              deleteExpense={deleteExpense} \n              updateExpense={updateExpense} \n              dbInitialized={dbInitialized}\n            />\n          </>\n        );\n    }\n  };\n\n  return (\n    <>\n      {/* Modern Navbar */}\n      <Navbar className=\"fixed top-0 left-0 right-0 shadow-md z-30\">\n        <Dropdown>\n          <DropdownButton as={NavbarItem}>\n            <NavbarLabel className=\"text-indigo-400 font-bold text-xl\">Rupiah Tracker</NavbarLabel>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </DropdownButton>\n          <DropdownMenu className=\"min-w-52\">\n            <DropdownItem onClick={() => setActiveTab('home')}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n              </svg>\n              <DropdownLabel>Home</DropdownLabel>\n            </DropdownItem>\n            <DropdownItem onClick={() => setActiveTab('wallets')}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 0v12h8V4H6zm2 2h4v2H8V6z\" />\n              </svg>\n              <DropdownLabel>Wallets</DropdownLabel>\n            </DropdownItem>\n            <DropdownItem onClick={() => setActiveTab('recurring')}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n              </svg>\n              <DropdownLabel>Recurring</DropdownLabel>\n            </DropdownItem>\n            <DropdownItem onClick={() => setActiveTab('settings')}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n              </svg>\n              <DropdownLabel>Settings</DropdownLabel>\n            </DropdownItem>\n            <DropdownDivider />\n            <DropdownItem onClick={() => setIsModalOpen(true)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n              </svg>\n              <DropdownLabel>Add Transaction</DropdownLabel>\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n\n        <NavbarDivider className=\"max-md:hidden\" />\n        \n        <NavbarSection className=\"max-md:hidden\">\n          <NavbarItem \n            onClick={() => setActiveTab('home')} \n            current={activeTab === 'home'}\n          >\n            Home\n          </NavbarItem>\n          <NavbarItem \n            onClick={() => setActiveTab('wallets')} \n            current={activeTab === 'wallets'}\n          >\n            Wallets\n          </NavbarItem>\n          <NavbarItem \n            onClick={() => setActiveTab('recurring')} \n            current={activeTab === 'recurring'}\n          >\n            Recurring\n          </NavbarItem>\n          <NavbarItem \n            onClick={() => setActiveTab('settings')} \n            current={activeTab === 'settings'}\n          >\n            Settings\n          </NavbarItem>\n        </NavbarSection>\n        \n        <NavbarSpacer />\n        \n        <NavbarSection>\n          <Dropdown>\n            <DropdownButton as={NavbarItem}>\n              <div className=\"relative\">\n                <Avatar initials=\"RS\" className=\"bg-indigo-600\" />\n                {dbInitialized && (\n                  <span className=\"absolute -top-1 -right-1 block h-2.5 w-2.5 rounded-full bg-green-400 border-2 border-gray-900\"></span>\n                )}\n              </div>\n            </DropdownButton>\n            <DropdownMenu className=\"min-w-52\" anchor=\"bottom end\">\n              <DropdownItem onClick={() => setActiveTab('settings')}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n                </svg>\n                <DropdownLabel>Settings</DropdownLabel>\n              </DropdownItem>\n              <DropdownDivider />\n              <DropdownItem>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n                <DropdownLabel>About</DropdownLabel>\n              </DropdownItem>\n              <DropdownItem>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z\" clipRule=\"evenodd\" />\n                </svg>\n                <DropdownLabel>Feedback</DropdownLabel>\n              </DropdownItem>\n              {dbInitialized && (\n                <div className=\"px-4 py-2 text-xs text-green-400 flex items-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Using IndexedDB\n                </div>\n              )}\n            </DropdownMenu>\n          </Dropdown>\n        </NavbarSection>\n      </Navbar>\n\n      <div className=\"max-w-4xl mx-auto px-6 pb-24 pt-20\">\n        {renderContent()}\n        \n        {/* Floating Action Button - only visible on mobile and home tab */}\n        {activeTab === 'home' && (\n          <div className=\"md:hidden\">\n            <FloatingActionButton onClick={() => setIsModalOpen(true)} />\n          </div>\n        )}\n        \n        {/* Add Transaction Modal */}\n        <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n          <ExpenseForm addExpense={addExpense} dbInitialized={dbInitialized} />\n        </Modal>\n        \n        {/* Add Recurring Transaction Modal */}\n        <Modal isOpen={isRecurringModalOpen} onClose={() => setIsRecurringModalOpen(false)}>\n          <RecurringForm addRecurringTransaction={addRecurringTransaction} dbInitialized={dbInitialized} />\n        </Modal>\n        \n        {/* Show bottom navigation on mobile */}\n        <div className=\"md:hidden\">\n          <BottomNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}