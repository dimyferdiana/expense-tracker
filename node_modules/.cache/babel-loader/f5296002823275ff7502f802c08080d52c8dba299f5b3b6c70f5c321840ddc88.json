{"ast":null,"code":"// Color mappings for categories and tags\nexport const colorClasses={blue:'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',green:'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',yellow:'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',indigo:'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-300',purple:'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',pink:'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-300',lime:'bg-lime-100 text-lime-800 dark:bg-lime-900 dark:text-lime-300',rose:'bg-rose-100 text-rose-800 dark:bg-rose-900 dark:text-rose-300',teal:'bg-teal-100 text-teal-800 dark:bg-teal-900 dark:text-teal-300',cyan:'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-300',orange:'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',gray:'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300'};// Get color classes for a category or tag\nexport const getColorClasses=colorName=>{return colorClasses[colorName]||colorClasses.gray;};// Convert full color class string to color name\nexport const getColorName=colorClass=>{for(const[name,classes]of Object.entries(colorClasses)){if(classes===colorClass){return name;}}return'gray';};// List of available colors\nexport const availableColors=Object.keys(colorClasses);","map":{"version":3,"names":["colorClasses","blue","green","yellow","indigo","purple","pink","lime","rose","teal","cyan","orange","gray","getColorClasses","colorName","getColorName","colorClass","name","classes","Object","entries","availableColors","keys"],"sources":["/Users/ddm/expense-tracker/src/utils/colors.js"],"sourcesContent":["// Color mappings for categories and tags\nexport const colorClasses = {\n  blue: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n  green: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n  yellow: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n  indigo: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-300',\n  purple: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',\n  pink: 'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-300',\n  lime: 'bg-lime-100 text-lime-800 dark:bg-lime-900 dark:text-lime-300',\n  rose: 'bg-rose-100 text-rose-800 dark:bg-rose-900 dark:text-rose-300',\n  teal: 'bg-teal-100 text-teal-800 dark:bg-teal-900 dark:text-teal-300',\n  cyan: 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-300',\n  orange: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',\n  gray: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300'\n};\n\n// Get color classes for a category or tag\nexport const getColorClasses = (colorName) => {\n  return colorClasses[colorName] || colorClasses.gray;\n};\n\n// Convert full color class string to color name\nexport const getColorName = (colorClass) => {\n  for (const [name, classes] of Object.entries(colorClasses)) {\n    if (classes === colorClass) {\n      return name;\n    }\n  }\n  return 'gray';\n};\n\n// List of available colors\nexport const availableColors = Object.keys(colorClasses); "],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,YAAY,CAAG,CAC1BC,IAAI,CAAE,+DAA+D,CACrEC,KAAK,CAAE,mEAAmE,CAC1EC,MAAM,CAAE,uEAAuE,CAC/EC,MAAM,CAAE,uEAAuE,CAC/EC,MAAM,CAAE,uEAAuE,CAC/EC,IAAI,CAAE,+DAA+D,CACrEC,IAAI,CAAE,+DAA+D,CACrEC,IAAI,CAAE,+DAA+D,CACrEC,IAAI,CAAE,+DAA+D,CACrEC,IAAI,CAAE,+DAA+D,CACrEC,MAAM,CAAE,uEAAuE,CAC/EC,IAAI,CAAE,+DACR,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,eAAe,CAAIC,SAAS,EAAK,CAC5C,MAAO,CAAAd,YAAY,CAACc,SAAS,CAAC,EAAId,YAAY,CAACY,IAAI,CACrD,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,YAAY,CAAIC,UAAU,EAAK,CAC1C,IAAK,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACpB,YAAY,CAAC,CAAE,CAC1D,GAAIkB,OAAO,GAAKF,UAAU,CAAE,CAC1B,MAAO,CAAAC,IAAI,CACb,CACF,CACA,MAAO,MAAM,CACf,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,eAAe,CAAGF,MAAM,CAACG,IAAI,CAACtB,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}